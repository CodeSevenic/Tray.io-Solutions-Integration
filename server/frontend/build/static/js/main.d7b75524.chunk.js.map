{"version":3,"sources":["components/auth/LoginForm.js","components/Loading.js","components/auth/Auth.js","components/svgs.js","components/auth/Login.js","components/auth/RegisterForm.js","components/auth/Register.js","lib/configWindow.js","api/solutions.js","config.js","views/Demo.js","components/Nav.js","components/View.js","components/Error.js","api/me.js","views/Account.js","components/ConfigWizard.js","lib/authWindow.js","components/Instance.js","views/SolutionsMine.js","views/SolutionsDiscover.js","components/AuthWizard.js","views/Authentications.js","Router.js","registerServiceWorker.js","index.js"],"names":["LoginForm","onLogin","this","props","styles","field","marginTop","btnSpan","marginLeft","loginContainer","backgroundColor","white","minWidth","maxWidth","height","position","top","left","right","margin","paper","padding","overflow","buttonsDiv","textAlign","loginBtn","float","loginHeader","marginBottom","className","style","variant","ref","elem","form","onSubmit","e","preventDefault","username","usernameElem","value","password","passwordElem","inputRef","input","label","placeholder","fullWidth","type","color","href","icon","React","Component","Loading","spinner","width","display","alignItems","justifyContent","loading","children","auth","isAuthenticated","authenticate","cb","signout","fetch","method","credentials","then","res","catch","err","console","log","PrivateRoute","component","rest","Route","render","Redirect","to","pathname","state","from","location","RedirectMain","MOLogo","xmlns","viewBox","in","values","fill","fillRule","d","transform","Login","redirectToReferrer","login","data","setState","body","JSON","stringify","headers","ok","json","alert","error","src","alt","RegisterForm","onRegister","name","nameElem","autoFocus","required","Register","success","showError","register","response","setTimeout","window","explain","paddingBottom","openConfigWindow","configWindow","open","undefined","configFinished","onmessage","close","postMessage","inProgress","errors","visibleValues","reduce","externalId","configValues","addEventListener","checkWindow","closed","removeEventListener","listSolutions","listSolutionInstances","createSolutionInstance","id","updateSolutionInstance","solutionInstanceId","enabled","updateSolutionInstanceConfig","deleteSolutionInstance","Demo","solutions","instances","loadinginstances","loadingSolutions","listInstances","onClickActivateIntegration","title","popupUrl","onClickDeactivateIntegration","onReconfigureIntegration","config","length","calculateInstancesSize","calculateSolutionSize","map","i","onClick","w","parent","calculateSize","renderSolutions","renderInstances","PureComponent","Nav","solutionsOpen","handleSolutionsClick","classes","root","Link","link","button","inset","primary","timeout","unmountOnExit","disablePadding","nested","borderRadius","whiteSpace","withStyles","theme","palette","background","paddingLeft","spacing","unit","textDecoration","View","header","fontWeight","fontSize","container","minHeight","content","withTheme","msg","listAuths","getAuthEditUrl","authId","getAuthCreateUrl","externalAuthId","Account","email","userInfo","statusText","bold","ConfigWizard","ready","handleIframeEvents","onClose","iframe","createRef","flex","border","boxSizing","loadingScreen","bottom","openAuthWindow","url","authWindow","checkClosedWindow","Instance","instanceState","configWizardSrc","authExternalId","authUrlParams","openWizard","openInIframe","addCustomValidation","onClickConfigure","onClickConfigureWithValidation","onClickConfigureInIframe","onClickEnable","get","onClickDelete","loadAllSolutionInstances","closeIframe","onCreateAuth","handleChange","event","target","controls","pill","marginRight","item","textFields","key","expandIcon","onChange","InputLabelProps","shrink","disabled","SolutionsMine","list","fontFamily","solutionInstances","buildList","SolutionsDiscover","text","grid","index","divider","secondary","onUseWorkflowClick","AuthWizard","Authentications","headerOptions","headerOption","advancedInput","auths","params","shouldOpenInFrame","iframeURL","loadAuths","openAuthWizard","showAuthWindow","direction","align","control","checked","App","Switch","exact","path","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","createMuiTheme","blue","ReactDOM","BrowserRouter","document","getElementById","URL","process","origin","status","indexOf","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d7b75524.chunk.js","sourcesContent":["import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { white } from '@material-ui/core/colors/';\nimport PersonAdd from '@material-ui/icons/PersonAdd';\nimport Input from '@material-ui/core/Input';\nimport Typography from '@material-ui/core/Typography';\n\nclass LoginForm extends React.Component {\n  render() {\n    const { onLogin } = this.props;\n    const styles = {\n      field: { marginTop: 10 },\n      btnSpan: { marginLeft: 5 },\n      loginContainer: {\n        backgroundColor: white,\n        minWidth: 320,\n        maxWidth: 400,\n        height: 'auto',\n        position: 'absolute',\n        top: '20%',\n        left: 0,\n        right: 0,\n        margin: 'auto',\n      },\n      paper: {\n        padding: 20,\n        overflow: 'auto',\n      },\n      buttonsDiv: {\n        textAlign: 'center',\n        padding: 10,\n      },\n      loginBtn: {\n        marginTop: 20,\n        float: 'right',\n      },\n      loginHeader: {\n        textAlign: 'center',\n        marginBottom: 15,\n      },\n    };\n\n    return (\n      <div className=\"form-div\">\n        <div style={styles.loginContainer}>\n          <Paper style={styles.paper}>\n            <Typography style={styles.loginHeader} variant=\"headline\">\n              Login to MO Solutions Integration\n            </Typography>\n            <form\n              ref={(elem) => (this.form = elem)}\n              onSubmit={(e) => {\n                e.preventDefault();\n                return onLogin({\n                  username: this.usernameElem.value,\n                  password: this.passwordElem.value,\n                });\n              }}\n            >\n              <Input\n                inputRef={(input) => (this.usernameElem = input)}\n                label=\"Username\"\n                placeholder=\"user\"\n                fullWidth={true}\n              />\n              <Input\n                inputRef={(input) => (this.passwordElem = input)}\n                style={{ marginTop: 10 }}\n                label=\"Password\"\n                placeholder=\"pass\"\n                fullWidth={true}\n                type=\"password\"\n              />\n\n              <Button style={styles.loginBtn} variant=\"outlined\" color=\"primary\" type=\"submit\">\n                Login\n              </Button>\n            </form>\n          </Paper>\n\n          <div style={styles.buttonsDiv}>\n            <Button label=\"Register\" href=\"/register\" icon={<PersonAdd />} color=\"secondary\">\n              Register New Account\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nclass Loading extends React.Component {\n    render() {\n        const styles = {\n            container: {\n                width: \"100%\",\n                height: \"100%\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n            }\n        };\n\n        const spinner = (\n            <div style={styles.container}>\n                <CircularProgress/>\n            </div>\n        );\n\n        return this.props.loading ? spinner : this.props.children;\n    }\n}\n\nexport default Loading;\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nexport const auth = {\n    isAuthenticated: false,\n\n    authenticate(cb) {\n        this.isAuthenticated = true\n        if (typeof cb === 'function') {\n            cb(true);\n        }\n    },\n\n    signout(cb) {\n        fetch('/api/logout', {\n            method: 'POST',\n            credentials: 'include',\n        })\n            .then((res) => {\n                this.isAuthenticated = false;\n                if (typeof cb === 'function') {\n                    // user was logged out\n                    cb(true);\n                }\n            })\n            .catch((err) => {\n                console.log('Error logging out user.');\n                if (typeof cb === 'function') {\n                    // user was not logged out\n                    cb(false);\n                }\n            });\n    }\n};\n\nexport const PrivateRoute = ({component: Component, ...rest}) => (\n    <Route {...rest} render={props => (\n        auth.isAuthenticated ? (\n            <Component {...props}/>\n        ) : (\n            <Redirect to={{\n                pathname: '/login',\n                state: {from: props.location}\n            }}/>\n        )\n    )}/>\n);\n\nexport const RedirectMain = (props) => (\n    auth.isAuthenticated ? (\n        <Redirect {...props} to=\"/solutions/discover\"/>\n    ) : (\n        <Redirect {...props} to=\"/login\"/>\n    )\n);\n","import React from 'react';\r\n\r\nexport function MOLogo() {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"110\"\r\n      height=\"80\"\r\n      className=\"logo-header logo-colour\"\r\n      viewBox=\"0 0 149 110\"\r\n    >\r\n      <defs>\r\n        <filter>\r\n          <feColorMatrix\r\n            in=\"SourceGraphic\"\r\n            values=\"0 0 0 0 0.086275 0 0 0 0 0.105882 0 0 0 0 0.188235 0 0 0 1.000000 0\"\r\n          ></feColorMatrix>\r\n        </filter>\r\n      </defs>\r\n      <g fill=\"#161b30\" fillRule=\"evenodd\">\r\n        <path\r\n          d=\"M170.544 107.346a22.029 22.029 0 01-3.03 8.57 27.357 27.357 0 01-6.039 6.96 29.92 29.92 0 01-5.391 3.542 30.908 30.908 0 01-6.036 2.328 26.56 26.56 0 01-6.364.95c-3.218.081-6.164-.376-8.862-1.37-2.7-1-4.998-2.442-6.912-4.29-1.932-1.801-3.356-3.958-4.313-6.433-.934-2.48-1.285-5.186-1.002-8.121.3-2.95 1.211-5.729 2.694-8.363 1.482-2.63 3.398-5 5.758-7.08a30.043 30.043 0 018.082-5.13 28.167 28.167 0 019.499-2.293c2.224-.132 4.35.012 6.374.403 2.02.412 3.92 1.054 5.65 1.922 1.76.885 3.31 1.954 4.665 3.225a17.19 17.19 0 014.378 6.681c.95 2.58 1.225 5.41.849 8.5\"\r\n          transform=\"translate(-48 -65)\"\r\n        ></path>\r\n        <path\r\n          d=\"M180.2 107.533a32.125 32.125 0 01-2.348 8.491 36.69 36.69 0 01-4.446 7.626 41.408 41.408 0 01-6.025 6.465 40.257 40.257 0 01-7.436 5.094c-2.627 1.422-5.392 2.506-8.297 3.3a37.57 37.57 0 01-8.878 1.309c-2.983.069-5.808-.218-8.466-.849-2.688-.638-5.145-1.56-7.39-2.821a32.35 32.35 0 01-1.932-1.19c.507 2.692 1.007 5.387 1.538 8.068-3.318.08-6.619.161-9.898.235-1.515-7.837-3.038-15.72-4.576-23.666-.804-4.124-1.618-8.27-2.415-12.43-2.116 4.798-4.226 9.582-6.28 14.302-2.053 4.695-4.105 9.348-6.115 13.96-1.727.491-3.478.977-5.183 1.457-7.064-6.054-14.097-12.112-21.12-18.142 1.785 8.562 3.58 17.043 5.354 25.484-3.12.072-6.208.152-9.285.218a7097.63 7097.63 0 01-4.31-20.057c-1.438-6.744-2.9-13.556-4.345-20.379a967.82 967.82 0 007.242-2.28c8.876 7.528 17.774 15.08 26.724 22.656 2.54-5.846 5.12-11.79 7.712-17.747a19337.8 19337.8 0 017.985-18.287c2.54-.8 5.086-1.6 7.65-2.412.579 3.014 1.144 6.016 1.72 9.013.16.873.322 1.734.49 2.596.508-.9 1.039-1.782 1.637-2.641a39.914 39.914 0 015.62-6.633 41.063 41.063 0 017.126-5.4 41.078 41.078 0 018.29-3.795 38.314 38.314 0 019.07-1.785c3.154-.185 6.16-.012 8.986.57 2.837.59 5.464 1.524 7.864 2.773 2.426 1.275 4.587 2.832 6.453 4.678a26.043 26.043 0 014.55 6.251 26.242 26.242 0 012.564 7.507c.494 2.684.54 5.497.17 8.46m-2.913-31.913c-13.603-7.877-33.218-11.873-54.332-10.27-21.117 1.615-39.533 8.2-52.976 17.41-13.085 8.956-21.315 20.522-21.94 32.451-.626 11.927 6.266 22.225 17.963 29.576 11.798 7.42 38.078 11.784 48.406 11.651 1.304-.018 2.307-.027 3.075-.04.008-.009.012-.023.023-.035-.1-.003-.116-.009.01-.009l-.01.009c.617.015 4.565-.025-.023.036-4.657 6.287-9.25 12.49-13.761 18.602 9.465-4.693 19.13-9.48 28.96-14.36 10.031-4.979 20.27-10.066 30.705-15.246h-.013c9.071-4.348 16.89-9.8 22.695-15.99 5.89-6.29 9.303-10.334 10.75-20.725 1.443-10.384-5.8-25.105-19.532-33.06\"\r\n          transform=\"translate(-48 -65)\"\r\n        ></path>\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n","import React from 'react';\nimport LoginForm from './LoginForm';\nimport { Redirect } from 'react-router-dom';\nimport Loading from '../Loading';\nimport { auth } from './Auth';\nimport { MOLogo } from '../svgs';\n\nexport default class Login extends React.Component {\n  state = {\n    loading: false,\n    redirectToReferrer: false,\n  };\n\n  login = (data) => {\n    console.log('Logging in ' + data.username);\n    this.setState({\n      loading: true,\n    });\n    fetch('/api/login', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          auth.authenticate(() => {\n            this.setState({\n              redirectToReferrer: true,\n              loading: false,\n            });\n          });\n        } else {\n          res.json().then((body) => {\n            alert(`Unable to login: ${body.error}`);\n            this.setState({\n              loading: false,\n            });\n          });\n        }\n      })\n      .catch((err) => {\n        console.error('Error logging in.', err);\n      });\n  };\n\n  render() {\n    const style = {\n      container: {\n        height: '300px',\n      },\n      warning: {\n        textAlign: 'center',\n        border: 'none',\n      },\n    };\n\n    const { from } = this.props.location.state || { from: { pathname: '/' } };\n    const { redirectToReferrer } = this.state;\n\n    if (redirectToReferrer) {\n      return <Redirect to={from} />;\n    }\n\n    return (\n      <div className=\"login-form\">\n        <div className=\"form-wrapper\">\n          <div className=\"logo-wrapper\">\n            <MOLogo />\n          </div>\n          <Loading loading={this.state.loading}>\n            <LoginForm onLogin={this.login} />\n          </Loading>\n        </div>\n        <div className=\"left-content\">\n          <div className=\"text-stripe\">\n            <div className=\"logo-vertical\">\n              <img src=\"/MO-secondary-logo-colour.webp\" alt=\"Logo Vertical\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { white } from '@material-ui/core/colors/';\nimport Input from '@material-ui/core/Input';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nclass RegisterForm extends React.Component {\n\n    render() {\n        const {onRegister} = this.props;\n        const styles = {\n            loginContainer: {\n                backgroundColor: white,\n                minWidth: 320,\n                maxWidth: 400,\n                height: 'auto',\n                position: 'absolute',\n                left: 0,\n                right: 0,\n                margin: '30px auto'\n            },\n            paper: {\n                padding: 20,\n                overflow: 'auto'\n            },\n            buttonsDiv: {\n                textAlign: 'center',\n                padding: 10\n            },\n            field: {\n                marginTop: 10,\n            },\n            loginBtn: {\n                marginTop: 20,\n                float: 'right'\n            },\n            btnSpan: {\n                marginLeft: 5\n            },\n        };\n\n        return (\n            <div>\n                <div style={styles.loginContainer}>\n                    <Paper style={styles.paper}>\n                        {this.props.loading ?\n                            <div style={{textAlign: \"center\"}}>\n                                <CircularProgress/>\n                            </div> :\n                            <form\n                                ref={(elem) => this.form = elem}\n                                onSubmit={e => {\n                                    e.preventDefault();\n                                    return onRegister({\n                                            name: this.nameElem.value,\n                                            username: this.usernameElem.value,\n                                            password: this.passwordElem.value,\n                                        },\n                                    );\n                                }\n                                }\n                            >\n\n                                <h3 style={{textAlign: \"center\"}}> New User Form </h3>\n\n                                <Input\n                                    inputRef={(input) => this.nameElem = input}\n                                    autoFocus={true}\n                                    label=\"Name\"\n                                    placeholder=\"Full Name\"\n                                    fullWidth={true}\n                                    style={{marginBottom: 10}}\n                                    required\n                                />\n\n                                <Input\n                                    inputRef={(input) => this.usernameElem = input}\n                                    label=\"Username\"\n                                    placeholder=\"Username\"\n                                    fullWidth={true}\n                                    style={{marginBottom: 10}}\n                                    required\n                                />\n\n                                <Input\n                                    inputRef={(input) => this.passwordElem = input}\n                                    label=\"Password\"\n                                    placeholder=\"Password\"\n                                    fullWidth={true}\n                                    type=\"password\"\n                                    required\n                                />\n\n                                <Button\n                                    style={styles.loginBtn}\n                                    variant=\"raised\" color=\"primary\"\n                                    type='submit'\n                                >\n                                    Register User\n                                </Button>\n\n                            </form>}\n\n                    </Paper>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default RegisterForm","import React from 'react';\nimport RegisterForm from './RegisterForm'\n\nexport default class Register extends React.Component {\n    state = {\n        redirectToReferrer: false,\n        error: false,\n        success: false,\n        loading: false,\n    }\n\n    showError = () => this.setState({\n        error: true,\n        loading: false\n    });\n\n    register = (data) => {\n        this.setState({\n            loading: true\n        });\n        fetch('/api/register', {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            credentials: 'include'\n        })\n            .then((response) => {\n                if (response.ok) {\n\n                    this.setState({\n                        success: true,\n                        loading: false,\n                    });\n\n                    setTimeout(() => window.location = '/login', 1000);\n                } else {\n                    this.showError();\n                }\n            })\n            .catch((err) => {\n                this.showError();\n            });\n    }\n\n    explain = 'This will create a new in-memory user account in the local Express backend that will persist until the backend is restarted.';\n\n    render() {\n        return (\n            <div>\n                <h1 style={{textAlign: 'center'}}>Register a New User</h1>\n                <div style={{\n                    textAlign: 'center',\n                    width: '500px',\n                    margin: 'auto',\n                    paddingBottom: '10px'\n                }}>{this.explain}</div>\n\n                {this.state.error ? <h3 style={{color: \"red\", textAlign: \"center\"}}>Registration failed</h3> : \"\"}\n                {this.state.success ? <h3 style={{color: \"green\", textAlign: \"center\"}}>Registration success</h3> : \"\"}\n                <RegisterForm onRegister={this.register} loading={this.state.loading}/>\n            </div>\n        )\n    }\n}\n\n","export const openConfigWindow = () => {\n    // Must open window from user interaction code otherwise it is likely\n    // to be blocked by a popup blocker:\n    const configWindow = window.open(\n        undefined,\n        '_blank',\n        'width=500,height=500,scrollbars=no',\n    );\n\n    // Listen to popup messages\n    let configFinished = false;\n    const onmessage = e => {\n        console.log('message', e.data.type, e.data);\n\n        if (e.data.type === 'tray.configPopup.error') {\n            // Handle popup error message\n            alert(`Error: ${e.data.err}`);\n            configWindow.close();\n        }\n        if (e.data.type === 'tray.configPopup.cancel') {\n            configWindow.close();\n        }\n        if (e.data.type === 'tray.configPopup.finish') {\n            // Handle popup finish message\n            configFinished = true;\n            configWindow.close();\n        }\n        if (e.data.type === 'tray.configPopup.validate') {\n            // Return validation in progress\n            configWindow.postMessage({\n                type: 'tray.configPopup.client.validation',\n                data: {\n                    inProgress: true,\n                }\n            }, '*');\n\n            setTimeout(() => {\n                    // Add errors to all inputs\n                    const errors = e.data.data.visibleValues.reduce(\n                        (errors, externalId) => {\n                            console.log(`Visible ${externalId} value:`, e.data.data.configValues[externalId]);\n                            // Uncomment next line to set an error message\n                            // errors[externalId] = 'Custom error message';\n                            return errors;\n                        },\n                        {}\n                    );\n\n                    // Return validation\n                    configWindow.postMessage({\n                        type: 'tray.configPopup.client.validation',\n                        data: {\n                            inProgress: false,\n                            errors: errors,\n                        }\n                    }, '*');\n                },\n                2000\n            );\n        }\n    };\n    window.addEventListener('message', onmessage);\n\n    // Check if popup window has been closed before finishing the configuration.\n    // We use a polling function due to the fact that some browsers may not\n    // display prompts created in the beforeunload event handler.\n    const CHECK_TIMEOUT = 1000;\n    const checkWindow = () => {\n        if (configWindow.closed) {\n            // Handle popup closing\n            if (!configFinished) {\n                alert('Configuration not finished');\n            } else {\n                alert(\n                    'Configuration finished. You can enable the new ' +\n                    'solution instance from the \"Solutions > My Instances\" section'\n                );\n                console.log('Configuration finished');\n            }\n            window.removeEventListener('message', onmessage);\n        } else {\n            setTimeout(checkWindow, CHECK_TIMEOUT);\n        }\n    }\n\n    checkWindow();\n\n    return configWindow;\n};\n","export const listSolutions = () =>\n    fetch('/api/solutions', {credentials: 'include'})\n        .then(async res => ({\n            ok: res.ok,\n            body: await res.json(),\n        }));\n\nexport const listSolutionInstances = () =>\n    fetch('/api/solutionInstances', {credentials: 'include'})\n        .then(async res => ({\n            ok: res.ok,\n            body: await res.json(),\n        }));\n\nexport const createSolutionInstance = (id, name) =>\n    fetch('/api/solutionInstances', {\n        body: JSON.stringify({\n            id: id,\n            name: name,\n        }),\n        headers: {\n            'content-type': 'application/json',\n        },\n        method: 'POST',\n        credentials: 'include',\n    }).then(async res => ({\n        ok: res.ok,\n        body: await res.json(),\n    }));\n\nexport const updateSolutionInstance = (solutionInstanceId, enabled) =>\n    fetch(`/api/solutionInstance/${solutionInstanceId}`, {\n        method: 'PATCH',\n        credentials: 'include',\n        headers: {\n            'content-type': 'application/json',\n        },\n        body: JSON.stringify({\n            enabled: enabled,\n        }),\n    }).then(async res => ({\n        ok: res.ok,\n    }));\n\nexport const updateSolutionInstanceConfig = solutionInstanceId =>\n    fetch(`/api/solutionInstance/${solutionInstanceId}/config`, {\n        method: 'PATCH',\n        credentials: 'include',\n    }).then(async res => ({\n        ok: res.ok,\n        body: await res.json(),\n    }));\n\nexport const getSolutionInstance = id =>\n    fetch(`/api/solutionInstance/${id}`, {credentials: 'include'})\n        .then(async res => ({\n            ok: res.ok,\n            body: await res.json(),\n        }));\n\nexport const deleteSolutionInstance = id =>\n    fetch(`/api/solutionInstance/${id}`, {\n            method: 'DELETE',\n            credentials: 'include',\n        })\n        .then(async res => ({\n            ok: res.ok,\n        }));\n","export default {\n    username: 'a',\n    password: 'a',\n};\n","import React from 'react';\nimport Loading from '../components/Loading';\n\n// Update to use Solutions\nimport { openConfigWindow } from '../lib/configWindow';\n// Add ability to remove solution instance\nimport {\n    listSolutions,\n    listSolutionInstances,\n    createSolutionInstance,\n    deleteSolutionInstance,\n    updateSolutionInstanceConfig,\n} from '../api/solutions';\n\nimport './demo.css';\n\nimport config from '../config.js';\n\nexport class Demo extends React.PureComponent {\n    state = {\n        solutions: null,\n        instances: null,\n        loadinginstances: true,\n        loadingSolutions: true,\n    }\n\n    componentDidMount() {\n        fetch('/api/login', {\n            method: 'POST',\n            body: JSON.stringify({\n                username: config.username,\n                password: config.password,\n            }),\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        }).then(() => {\n            this.listSolutions();\n            this.listInstances();\n        });\n    }\n\n    calculateInstancesSize() {\n        if (!this.state.instances || !this.state.instances.length) {\n            return 0;\n        }\n\n        return 40 + this.state.instances.length * 18;\n    }\n\n    calculateSolutionSize() {\n        if (!this.state.solutions || !this.state.solutions.length) {\n            return 0;\n        }\n\n        return this.state.solutions.length * 30;\n    }\n\n    calculateSize() {\n        const standardContentHeight = 139;\n        return standardContentHeight + this.calculateInstancesSize() + this.calculateSolutionSize();\n    }\n\n    listSolutions = () => {\n        listSolutions().then(({body}) => {\n            this.setState({solutions: body.data, loadingSolutions: false});\n        });\n    }\n\n    listInstances = () => {\n        listSolutionInstances().then(({body}) => {\n            this.setState({instances: body.data, loadinginstances: false});\n        });\n    }\n\n    onClickActivateIntegration = (id, title) => {\n        const configWindow = openConfigWindow();\n\n        createSolutionInstance(id, title).then(({body}) => {\n            // After we generate the popup URL, set it to the previously opened\n            // window:\n            configWindow.location = body.data.popupUrl;\n            this.listInstances();\n        });\n    }\n\n    onClickDeactivateIntegration = id => {\n        deleteSolutionInstance(id).then(this.listInstances);\n    }\n\n    onReconfigureIntegration = id => {\n        const configWindow = openConfigWindow();\n\n        updateSolutionInstanceConfig(id).then(({body}) => {\n            // After we generate the popup URL, set it to the previously opened\n            // window:\n            configWindow.location = body.data.popupUrl;\n        });\n    }\n\n    renderSolutions() {\n        return this.state.solutions && this.state.solutions.map(i => {\n            return (\n                <div className=\"integration-container\">\n                    <button className=\"integration-name\">{i.title}</button>\n                    <span\n                        className=\"activate\"\n                        onClick={() => this.onClickActivateIntegration(i.id, i.title)}\n                    >\n                        Activate\n                    </span>\n                </div>\n            );\n        });\n    }\n\n    renderInstances() {\n        if (!this.state.instances || !this.state.instances.length) return null;\n\n        return (\n            <div className=\"workflow-container\">\n                <div className=\"workflow-header\">\n                    <h3 className=\"app-name\">App Name</h3>\n                </div>\n\n                {this.state.instances.map(w => {\n                    return (\n                        <div className=\"workflow-container\">\n                            <button>\n                                {w.name}\n                            </button>\n                            <button\n                                className=\"deactivate\"\n                                onClick={() => this.onClickDeactivateIntegration(w.id)}\n                            >\n                                Delete\n                            </button>\n                            <button\n                                className=\"reconfigure\"\n                                onClick={() => this.onReconfigureIntegration(w.id)}\n                            >\n                                Reconfigure\n                            </button>\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n\n    render() {\n        window.parent.postMessage({\n            type: 'tray_demo_size',\n            height: this.calculateSize() + 'px',\n        }, '*');\n\n        return (\n            <Loading loading={this.state.loadinginstances && this.state.loadingSolutions}>\n                <div className=\"demo-container\">\n                    <div>\n                        <h2 className=\"header\">Available Integrations</h2>\n                        {this.renderSolutions()}\n                    </div>\n                    <div>\n                        <h2 className=\"header\">Active Integrations</h2>\n\n                        {this.state.instances && this.state.instances.length ?\n                            <p>You have authorized the following applications with <button>Asana Connect</button>.</p> :\n                            <p>Applications you authorize with <button>Asana Connect</button> will appear here.</p>\n                        }\n\n                        {this.renderInstances()}\n                    </div>\n                    <div className=\"footer\">\n                        <button>Manage Developer Apps</button>\n                    </div>\n                </div>\n            </Loading>\n        );\n    }\n}\n\nexport default Demo;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport AccountIcon from '@material-ui/icons/AccountCircle';\nimport AccountBox from '@material-ui/icons/AccountBox';\nimport PlugIcon from '@material-ui/icons/SettingsInputComponent';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport CircleIcon from '@material-ui/icons/FiberManualRecord';\nimport { Link } from 'react-router-dom';\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        height: '100%',\n        maxWidth: 250,\n        backgroundColor: theme.palette.background.paper,\n        paddingBottom: 40,\n    },\n    nested: {\n        paddingLeft: theme.spacing.unit * 4,\n    },\n    link: {\n        textDecoration: \"none\",\n    }\n});\n\nclass Nav extends React.PureComponent {\n    state = {\n        solutionsOpen: true,\n    };\n\n    handleSolutionsClick = () => {\n        this.setState({solutionsOpen: !this.state.solutionsOpen});\n    };\n\n    render() {\n        const {classes} = this.props;\n\n        return (\n            <div>\n                <div className={classes.root}>\n                    <List\n                        component=\"nav\"\n                    >\n                        <Link to=\"/account\" className={classes.link}>\n                            <ListItem button>\n                                <ListItemIcon>\n                                    <AccountIcon/>\n                                </ListItemIcon>\n                                <ListItemText inset primary=\"Account\"/>\n\n                            </ListItem>\n                        </Link>\n\n                        <Link to=\"/authentications\" className={classes.link}>\n                            <ListItem button>\n                                <ListItemIcon>\n                                    <AccountBox/>\n                                </ListItemIcon>\n                                <ListItemText inset primary=\"Authentications\"/>\n\n                            </ListItem>\n                        </Link>\n\n                        <ListItem button onClick={this.handleSolutionsClick}>\n                            <ListItemIcon>\n                                <PlugIcon/>\n                            </ListItemIcon>\n                            <ListItemText inset primary=\"Solutions\"/>\n                            {this.state.solutionsOpen ? <ExpandLess/> : <ExpandMore/>}\n                        </ListItem>\n\n                        <Collapse in={this.state.solutionsOpen} timeout=\"auto\" unmountOnExit>\n                            <List component=\"div\" disablePadding>\n\n                                <Link className={classes.link} to=\"/solutions/mine\">\n                                    <ListItem button className={classes.nested}>\n                                        <ListItemIcon>\n                                            <CircleIcon style={{borderRadius: 20}}/>\n                                        </ListItemIcon>\n                                        <ListItemText inset primary=\"My Instances\" style={{whiteSpace: 'nowrap'}}/>\n                                    </ListItem>\n                                </Link>\n\n                                <Link className={classes.link} to=\"/solutions/discover\">\n                                    <ListItem button className={classes.nested}>\n                                        <ListItemIcon>\n                                            <CircleIcon style={{borderRadius: 20}}/>\n                                        </ListItemIcon>\n                                        <ListItemText inset primary=\"Discover\"/>\n                                    </ListItem>\n                                </Link>\n\n                            </List>\n                        </Collapse>\n                    </List>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Nav);\n","import React from 'react';\nimport Nav from './Nav';\nimport { withTheme } from '@material-ui/core/styles';\n\nclass View extends React.Component {\n    render() {\n        const styles = {\n            header: {\n                backgroundColor: \"#2196F3\",\n                padding: \"12px 10px\",\n                color: \"white\",\n                fontWeight: 500,\n                fontSize: \"1.3rem\",\n            },\n            container: {\n                backgroundColor: \"#F5F5F5\",\n                display: \"flex\",\n                minHeight: 500,\n                paddingBottom: 40,\n            },\n            content: {width: \"100%\"},\n        };\n\n        return (\n            <div>\n                <div style={styles.header}>OEM Demo Application</div>\n                <div style={styles.container}>\n                    <Nav/>\n                    <div style={styles.content}>\n                        {this.props.children}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTheme()(View);\n","import React from 'react';\nimport {withTheme} from '@material-ui/core/styles';\n\nconst styles = {\n    container: {\n        width: \"100%\",\n        height: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        color: \"crimson\",\n        padding: '0 20px',\n    }\n};\n\nconst Error = ({msg}) => (\n    <div style={styles.container}>\n        <div>{JSON.stringify(msg, null, 4)}</div>\n    </div>\n);\n\nexport default withTheme()(Error);","export const me = () =>\n    fetch('/api/me', {credentials: 'include'})\n        .then(async res => ({\n            ok: res.ok,\n            body: await res.json(),\n            statusText: res.statusText,\n        }))\n\nexport const listAuths = () =>\n    fetch('/api/auths', {credentials: 'include'})\n        .then(async res => ({\n            ok: res.ok,\n            body: await res.json(),\n        }))\n\nexport const getAuthEditUrl = (authId) =>\n    fetch('/api/auth', {\n        body: JSON.stringify({\n            authId\n        }),\n        headers: {\n            'content-type': 'application/json',\n        },\n        method: 'POST',\n        credentials: 'include'\n    })\n        .then(async res => ({\n            ok: res.ok,\n            body: await res.json(),\n        }))\n\nexport const getAuthCreateUrl = (solutionInstanceId, externalAuthId) =>\n    fetch('/api/auth/create', {\n        body: JSON.stringify({\n            solutionInstanceId,\n            externalAuthId\n        }),\n        headers: {\n            'content-type': 'application/json',\n        },\n        method: 'POST',\n        credentials: 'include'\n    })\n        .then(async res => ({\n            ok: res.ok,\n            body: await res.json(),\n        }))\n","import React from 'react';\nimport View from '../components/View';\nimport Error from '../components/Error';\nimport Typography from '@material-ui/core/Typography';\nimport Loading from '../components/Loading';\n\nimport { me } from '../api/me';\n\nexport class Account extends React.PureComponent {\n\n    state = {\n        loading: true,\n        error: false,\n        email: '',\n        username: '',\n        userInfo: {},\n    }\n\n    componentDidMount() {\n        me().then(({ok, body, statusText}) => {\n            if (ok) {\n                this.setState({\n                    username: body.username,\n                    email: body.email,\n                    loading: false,\n                });\n            } else {\n                this.setState({\n                    error: statusText,\n                    loading: false,\n                });\n            }\n        });\n    }\n\n    render() {\n        const style = {\n            bold: {\n                fontWeight: 'bold'\n            },\n        };\n\n        return (\n            <View>\n                <Loading loading={this.state.loading}>\n                    {this.state.error ?\n                        <Error msg={this.state.error}/> :\n                        <div>\n                            <Typography variant=\"headline\" style={{margin: \"20px\"}}>\n                                Your Tray account\n                            </Typography>\n                            <div style={{padding: \"10px\"}}>\n                                <div>\n                                    <span style={style.bold}>Tray username: </span>\n                                    {this.state.username}\n                                </div>\n                                <div>\n                                    <span style={style.bold}>Tray email: </span>\n                                    {this.state.email}\n                                </div>\n                            </div>\n                        </div>\n                    }\n                </Loading>\n            </View>\n        );\n    }\n}\n\nexport default Account;\n","import {withTheme} from \"@material-ui/core/styles/index\";\nimport React from 'react';\n\nexport class ConfigWizard extends React.PureComponent {\n    state = {\n        ready: false,\n    };\n\n    constructor(props) {\n        super(props);\n        this.iframe = React.createRef();\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"message\", this.handleIframeEvents);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"message\", this.handleIframeEvents);\n    }\n\n    handleIframeEvents = (e) => {\n        console.log(`${e.data.type} event received`);\n        // Here we should handle all event types\n        if (e.data.type === 'tray.configPopup.error') {\n            alert(`Error: ${e.data.err}`);\n        }\n        if (e.data.type === 'tray.configPopup.cancel') {\n            this.props.onClose();\n        }\n        if (e.data.type === 'tray.configPopup.ready') {\n            this.setState({ ready: true });\n        }\n        if (e.data.type === 'tray.configPopup.finish') {\n            this.props.onClose();\n        }\n    };\n\n    render() {\n        const styles = {\n            container: {\n                flex: 1,\n                position: 'relative',\n            },\n            iframe: {\n                width: '100%',\n                height: '100%',\n                minHeight: '500px',\n                border: '1px solid #2196f3',\n                borderRadius: '4px',\n                boxSizing: 'border-box',\n            },\n            loadingScreen: {\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0,\n                position: 'absolute',\n                background: 'white',\n                border: '1px solid #2196f3',\n                borderRadius: '4px',\n            }\n        };\n\n        return (\n            <div style={styles.container}>\n                <iframe\n                    ref={this.iframe}\n                    style={styles.iframe}\n                    src={this.props.src}\n                    title=\"Solution instance configurator\"\n                />\n                {!this.state.ready && <div style={styles.loadingScreen}>Loading...</div>}\n            </div>\n        )\n    }\n\n}\n\nexport default withTheme()(ConfigWizard);\n","export const openAuthWindow = (url) => {\n    // Must open window from user interaction code otherwise it is likely\n    // to be blocked by a popup blocker:\n    const authWindow = window.open(\n        undefined,\n        '_blank',\n        'width=500,height=500,scrollbars=no',\n    );\n\n    const onmessage = e => {\n        console.log('message', e.data.type, e.data);\n\n        if (e.data.type === 'tray.authPopup.error') {\n            // Handle popup error message\n            alert(`Error: ${e.data.error}`);\n            authWindow.close();\n        }\n        if (e.data.type === 'tray.authpopup.close' || e.data.type === 'tray.authpopup.finish') {\n            authWindow.close();\n        }\n    };\n    window.addEventListener('message', onmessage);\n\n    // Check if popup window has been closed\n    const CHECK_TIMEOUT = 1000;\n    const checkClosedWindow = () => {\n        if (authWindow.closed) {\n            window.removeEventListener('message', onmessage);\n        } else {\n            setTimeout(checkClosedWindow, CHECK_TIMEOUT);\n        }\n    }\n\n    checkClosedWindow();\n    authWindow.location = url;\n};\n","import Typography from '@material-ui/core/Typography';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Button from '@material-ui/core/Button';\nimport { withTheme } from \"@material-ui/core/styles/index\";\nimport React from 'react';\nimport Loading from './Loading';\nimport { get } from 'lodash';\n\nimport { openConfigWindow } from '../lib/configWindow';\n\nimport {\n    updateSolutionInstance,\n    updateSolutionInstanceConfig,\n    deleteSolutionInstance,\n} from '../api/solutions';\nimport {ConfigWizard} from \"./ConfigWizard\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {getAuthCreateUrl} from \"../api/me\";\nimport {openAuthWindow} from \"../lib/authWindow\";\n\nexport class Instance extends React.PureComponent {\n    state = {\n        error: false,\n        loading: false,\n        instanceState: undefined,\n        configWizardSrc: undefined,\n        authExternalId: undefined,\n        authUrlParams: ''\n    };\n\n    openWizard = (openInIframe, addCustomValidation = false) => {\n        updateSolutionInstanceConfig(this.props.id).then(({body}) => {\n            const url = addCustomValidation ? `${body.data.popupUrl}&customValidation=true` : body.data.popupUrl;\n\n            if (!openInIframe) {\n                const configWindow = openConfigWindow();\n                configWindow.location = url;\n            } else {\n                this.setState({\n                    configWizardSrc: url\n                })\n            }\n        });\n    };\n\n    onClickConfigure = () => {\n        this.openWizard(false,false);\n    };\n\n    onClickConfigureWithValidation = () => {\n        this.openWizard(false,true);\n    };\n\n    onClickConfigureInIframe = () => {\n        this.openWizard(true, false);\n    };\n\n    onClickEnable = () => {\n        const enabled = get(this.state, 'instanceState', this.props.enabled);\n        updateSolutionInstance(this.props.id, !enabled).then(()=>{\n            this.setState({instanceState: !enabled});\n        });\n    };\n\n    onClickDelete = () => {\n        deleteSolutionInstance(this.props.id).then(this.props.loadAllSolutionInstances);\n    }\n\n    closeIframe = () => {\n        this.setState({\n            configWizardSrc: undefined\n        })\n    };\n\n    onCreateAuth = () => {\n        getAuthCreateUrl(this.props.id, this.state.authExternalId)\n            .then(({body}) => {\n                openAuthWindow(`${body.data.popupUrl}&${this.state.authUrlParams}`);\n            })\n    };\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    render() {\n        const {id, name} = this.props;\n        const {configWizardSrc} = this.state;\n\n        const enabled = get(this.state, 'instanceState', this.props.enabled);\n\n        const styles = {\n            controls: {\n                margin: \"10px\",\n                float: \"right\",\n                maxWidth: '400px'\n            },\n            pill: {\n                backgroundColor: enabled ? \"#7ebc54\" : \"#df5252\",\n                borderRadius: \"4px\",\n                marginRight: \"10px\",\n                color: \"white\",\n                padding: \"3px 5px\",\n            },\n            item: {\n                width: '100%',\n                border: 'none',\n            },\n            name: {\n                marginTop: '2px'\n            },\n            button: {\n                width: \"100%\",\n                marginBottom: \"10px\"\n            },\n            textFields: {\n                width: \"100%\",\n                margin: \"10px 0\",\n            }\n        };\n\n        return (\n            <Loading loading={this.state.loading}>\n                <ExpansionPanel\n                    key={id}\n                    style={styles.item}\n                >\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon/>}>\n                        <span style={styles.pill}>\n                            {enabled ? \"enabled\" : \"disabled\"}\n                        </span>\n                        <Typography style={styles.name}>\n                            {name}\n                        </Typography>\n                    </ExpansionPanelSummary>\n\n                    <ExpansionPanelDetails>\n                        <div id=\"Controls\" style={styles.controls}>\n                            <Button\n                                style={styles.button}\n                                onClick={this.onClickEnable}\n                                variant=\"outlined\"\n                                color=\"primary\"\n                            >\n                                {enabled ? 'Disable' : 'Enable'}\n                            </Button>\n                            <Button\n                                style={styles.button}\n                                onClick={this.onClickConfigure}\n                                variant=\"outlined\"\n                                color=\"primary\"\n                            >\n                                Configure\n                            </Button>\n                            <Button\n                                style={styles.button}\n                                onClick={this.onClickConfigureWithValidation}\n                                variant=\"outlined\"\n                                color=\"primary\"\n                            >\n                                Configure with custom validation\n                            </Button>\n                            <Button\n                                style={styles.button}\n                                onClick={this.onClickConfigureInIframe}\n                                variant=\"outlined\"\n                                color=\"primary\"\n                            >\n                                Configure in iframe\n                            </Button>\n                            <Button\n                                style={styles.button}\n                                onClick={this.onClickDelete}\n                                variant=\"outlined\"\n                                color=\"primary\"\n                            >\n                                Delete\n                            </Button>\n                            <Typography variant=\"title\">\n                                Create auth\n                            </Typography>\n                            <TextField\n                                style={styles.textFields}\n                                label=\"Auth external id\"\n                                value={this.state.authExternalId}\n                                onChange={this.handleChange('authExternalId')}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                            <TextField\n                                style={styles.textFields}\n                                label=\"Advanced Url Params\"\n                                value={this.state.authUrlParams}\n                                onChange={this.handleChange('authUrlParams')}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                            <Button\n                                style={styles.button}\n                                onClick={this.onCreateAuth}\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                disabled={!this.state.authExternalId}\n                            >\n                                Create auth\n                            </Button>\n                        </div>\n                        {configWizardSrc && <ConfigWizard src={configWizardSrc} onClose={this.closeIframe}/>}\n\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n            </Loading>\n        );\n    }\n\n}\n\nexport default withTheme()(Instance);\n","import React from 'react';\nimport View from '../components/View';\nimport Error from '../components/Error';\nimport Typography from '@material-ui/core/Typography';\nimport { withTheme } from \"@material-ui/core/styles/index\";\nimport Loading from '../components/Loading';\nimport Instance from '../components/Instance';\n\nimport { listSolutionInstances } from '../api/solutions';\n\nexport class SolutionsMine extends React.PureComponent {\n\n    styles = {\n        list: {\n            maxWidth: \"1000px\",\n            margin: 'auto',\n            marginBottom: '30px',\n            fontFamily: \"Roboto, Helvetica, Arial, sans-serif\"\n        }\n    }\n\n    state = {\n        loading: true,\n        error: false,\n        solutionInstances: [],\n    }\n\n    componentDidMount() {\n        this.loadAllSolutionInstances();\n    }\n\n    loadAllSolutionInstances = () => {\n        listSolutionInstances()\n            .then(({ok, body}) => {\n                if (ok) {\n                    this.setState({\n                        solutionInstances: body.data,\n                        loading: false,\n                    });\n                } else {\n                    this.setState({\n                        error: body,\n                        loading: false,\n                    });\n                }\n            });\n    }\n\n    buildList(solutionInstances) {\n        return (\n            <div>\n                <div style={this.styles.list}>\n                    <Typography variant=\"headline\" style={{margin: \"20px\"}}>\n                        My Solution Instances\n                    </Typography>\n                    {\n                        solutionInstances.map(({id, name, enabled}) => (\n                            <Instance\n                                id={id}\n                                key={id}\n                                name={name}\n                                enabled={enabled}\n                                loadAllSolutionInstances={this.loadAllSolutionInstances}\n                            />\n                        ))\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <View>\n                <Loading loading={this.state.loading}>\n                    {this.state.error ?\n                        <Error msg={this.state.error}/> :\n                        this.buildList(this.state.solutionInstances)\n                    }\n                </Loading>\n            </View>\n        );\n    }\n\n}\n\nexport default withTheme()(SolutionsMine);\n","import React from 'react';\nimport View from '../components/View';\nimport Error from '../components/Error';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Loading from '../components/Loading';\n\nimport { openConfigWindow } from '../lib/configWindow';\nimport { listSolutions, createSolutionInstance } from '../api/solutions';\n\nexport class SolutionsDiscover extends React.PureComponent {\n\n    state = {\n        loading: true,\n        error: false,\n        solutions: [],\n    }\n\n    componentDidMount() {\n        listSolutions()\n            .then(({ok, body}) => {\n                if (ok) {\n                    this.setState({\n                        solutions: body.data,\n                        loading: false,\n                    });\n                } else {\n                    this.setState({\n                        error: body,\n                        loading: false,\n                    });\n                }\n            });\n    }\n\n    onUseWorkflowClick(id, name) {\n        const configWindow = openConfigWindow();\n\n        createSolutionInstance(id, name).then(({body}) => {\n            // After we generate the popup URL, set it to the previously opened\n            // window:\n            configWindow.location = body.data.popupUrl;\n        });\n    }\n\n    buildList(solutions) {\n        const styles = {\n            controls: {marginLeft: \"20px\"},\n            button: {width: \"100%\"},\n            text: {fontWeight: \"bold\"},\n            grid: {\n                maxWidth: \"900px\",\n                margin: \"20px auto\",\n            },\n            header: {margin: \"20px\"},\n            list: {\n                margin: \"10px\",\n                maxWidth: \"1000px\",\n                backgroundColor: \"white\",\n            },\n        };\n\n        return (\n            <Grid item style={styles.grid}>\n                <Typography\n                    variant=\"headline\"\n                    style={styles.header}\n                >\n                    Discover solutions\n                </Typography>\n                <Paper>\n                    <List style={styles.list}>\n                        {\n                            solutions.map(({title, id}, index) =>\n                                <ListItem\n                                    divider={index !== solutions.length - 1}\n                                    key={index}\n                                >\n                                    <ListItemText\n                                        style={styles.text}\n                                        primary={title}\n                                        secondary={null}\n                                    />\n                                    <ListItemSecondaryAction\n                                        onClick={() => this.onUseWorkflowClick(id, title)}\n                                    >\n                                        <Button\n                                            style={styles.button}\n                                            variant=\"outlined\"\n                                            color=\"primary\"\n                                        >\n                                            Use\n                                        </Button>\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            )\n                        }\n                    </List>\n                </Paper>\n            </Grid>\n        );\n    }\n\n    render() {\n        return (\n            <View>\n                <Loading loading={this.state.loading}>\n                    {\n                        this.state.error ?\n                            <Error msg={this.state.error}/> :\n                            this.buildList(this.state.solutions)\n                    }\n                </Loading>\n            </View>\n        );\n    }\n\n}\n\nexport default SolutionsDiscover;\n","import { withTheme } from \"@material-ui/core/styles/index\";\nimport React from \"react\";\n\nexport class AuthWizard extends React.PureComponent {\n  state = {};\n\n  constructor(props) {\n    super(props);\n    this.iframe = React.createRef();\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"message\", this.handleIframeEvents);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"message\", this.handleIframeEvents);\n  }\n\n  handleIframeEvents = (e) => {\n    console.log(`${e.data.type} event received`);\n    // Here we should handle all event types\n    if (e.data.type === \"tray.authPopup.error\") {\n      alert(`Error: ${e.data.error}`);\n    }\n    if (e.data.type === \"tray.authpopup.close\") {\n      this.props.onClose();\n    }\n    if (e.data.type === \"tray.authpopup.finish\") {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const styles = {\n      container: {\n        flex: 1,\n        position: \"relative\",\n      },\n      iframe: {\n        width: \"100%\",\n        height: \"100%\",\n        minHeight: \"500px\",\n        border: \"1px solid #2196f3\",\n        borderRadius: \"4px\",\n        boxSizing: \"border-box\",\n      },\n    };\n\n    return (\n      <div style={styles.container}>\n        <iframe ref={this.iframe} style={styles.iframe} src={this.props.src} />\n      </div>\n    );\n  }\n}\n\nexport default withTheme()(AuthWizard);\n","import React from 'react';\nimport View from '../components/View';\nimport Error from '../components/Error';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withTheme } from \"@material-ui/core/styles/index\";\nimport Loading from '../components/Loading';\nimport { listAuths, getAuthEditUrl } from '../api/me';\nimport { openAuthWindow } from \"../lib/authWindow\";\nimport { getAuthCreateUrl } from \"../api/me\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Grid from \"@material-ui/core/Grid\";\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { AuthWizard } from '../components/AuthWizard';\n\nexport class Authentications extends React.PureComponent {\n\n    styles = {\n        controls: {marginLeft: \"20px\"},\n        button: {width: \"100%\"},\n        text: {fontWeight: \"bold\"},\n        grid: {\n            maxWidth: \"900px\",\n            margin: \"20px auto\",\n        },\n        header: {margin: \"20px\"},\n        headerOptions: { display: 'flex', margin: \"0 20px 20px 20px\" },\n        headerOption: { marginRight: \"20px\" },\n        list: {\n            margin: \"10px\",\n            maxWidth: \"1000px\",\n            backgroundColor: \"white\",\n        },\n        advancedInput: {\n            marginRight: \"20px\",\n            flex: 1,\n        }\n    };\n\n    state = {\n        loading: true,\n        error: false,\n        auths: [],\n        params: '',\n        shouldOpenInFrame: false,\n        iframeURL: undefined\n    }\n\n    componentDidMount() {\n        this.loadAuths();\n    }\n\n    loadAuths = () => {\n        this.setState({\n            loading: true\n        }, () => {\n            listAuths()\n                .then(({ok, body}) => {\n                    if (ok) {\n                        this.setState({\n                            auths: body.data || [],\n                            loading: false,\n                        });\n                    } else {\n                        this.setState({\n                            error: body,\n                            loading: false,\n                        });\n                    }\n                });\n        });\n    }\n\n    openAuthWizard = (url) => {\n        if (this.state.shouldOpenInFrame) {\n          this.setState({ iframeURL: url });\n        } else {\n          openAuthWindow(url);\n        }\n    }\n\n    closeIframe = () => {\n        this.setState({ iframeURL: undefined });\n        this.loadAuths();\n    }\n\n    onCreateAuth = () => {\n        getAuthCreateUrl()\n            .then(({body}) => {\n                this.openAuthWizard(`${body.data.popupUrl}&${this.state.params}`);\n            })\n    };\n\n    buildList() {\n        return (\n            <Paper>\n                <List style={this.styles.list}>\n                    <Loading loading={this.state.loading}>\n                        {\n                            this.state.auths.map(({id, name}, index) =>\n                                <ListItem\n                                    divider={index !== this.state.auths.length - 1}\n                                    key={index}\n                                >\n                                    <ListItemText\n                                        style={this.styles.text}\n                                        primary={name}\n                                        secondary={null}\n                                    />\n                                    <ListItemSecondaryAction onClick={this.showAuthWindow(id)}>\n                                        <Button\n                                            style={this.styles.button}\n                                            variant=\"outlined\"\n                                            color=\"primary\"\n                                        >\n                                            Edit\n                                        </Button>\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            )\n                        }\n                    </Loading>\n                </List>\n            </Paper>\n        );\n    }\n\n    showAuthWindow = (id) => () => {\n        getAuthEditUrl(id)\n            .then(({body}) => {\n                this.openAuthWizard(`${body.data.popupUrl}&${this.state.params}`);\n            })\n    };\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    render() {\n        return (\n            <View>\n                <Grid item style={this.styles.grid}>\n                    <Grid\n                        container\n                        direction=\"column\"\n                    >\n                        <Typography\n                            variant=\"headline\"\n                            align=\"left\"\n                            style={this.styles.header}\n                        >\n                            Authentications\n                        </Typography>\n                        <div style={this.styles.headerOptions}>\n                            <Button\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                disabled={this.state.loading}\n                                onClick={this.onCreateAuth}\n                                style={this.styles.headerOption}\n                            >\n                                New\n                            </Button>\n                            <Button\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                disabled={this.state.loading}\n                                onClick={this.loadAuths}\n                                style={this.styles.headerOption}\n                            >\n                                Refresh\n                                <RefreshIcon />\n                            </Button>\n                            <TextField\n                                id=\"params\"\n                                label=\"Advanced Url Params\"\n                                value={this.state.params}\n                                onChange={this.handleChange('params')}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                style={this.styles.advancedInput}\n                            />\n                            <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    color=\"primary\"\n                                    value={this.state.shouldOpenInFrame}\n                                    onChange={({ target: { checked } }) => {\n                                      this.setState({ shouldOpenInFrame: checked });\n                                    }}\n                                  />\n                                }\n                                label=\"Open in iframe\"\n                            />\n                        </div>\n                    </Grid>\n                    {this.state.error ? (\n                          <Error msg={this.state.error} />\n                     ) : (\n                         <>\n                           {this.state.iframeURL && (\n                             <AuthWizard\n                               src={this.state.iframeURL}\n                               onClose={this.closeIframe}\n                             />\n                           )}\n                           {this.buildList()}\n                         </>\n                     )}\n                </Grid>\n            </View>\n        );\n    }\n\n}\n\nexport default withTheme()(Authentications);\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\nimport { PrivateRoute, RedirectMain } from \"./components/auth/Auth\";\n\nimport Demo from \"./views/Demo\";\nimport Account from \"./views/Account\";\nimport SolutionsMine from \"./views/SolutionsMine\";\nimport SolutionsDiscover from \"./views/SolutionsDiscover\";\nimport Authentications from \"./views/Authentications\";\n\nconst App = () => (\n    <Router>\n        <div>\n            <Switch>\n                <RedirectMain exact from=\"/\"/>\n            </Switch>\n            <Route path=\"/demo\" component={Demo}/>\n            <Route path=\"/login\" component={Login}/>\n            <Route path=\"/register\" component={Register}/>\n            <PrivateRoute path=\"/account\" component={Account}/>\n            <PrivateRoute path=\"/solutions/discover\" component={SolutionsDiscover}/>\n            <PrivateRoute path=\"/solutions/mine\" component={SolutionsMine}/>\n            <PrivateRoute path=\"/authentications\" component={Authentications}/>\n        </div>\n    </Router>\n);\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './Router';\nimport registerServiceWorker from './registerServiceWorker';\nimport blue from '@material-ui/core/colors/blue';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'light',\n        primary: blue,\n    },\n});\n\nReactDOM.render((\n    <div>\n        <BrowserRouter>\n            <MuiThemeProvider theme={theme}>\n                <App/>\n            </MuiThemeProvider>\n        </BrowserRouter>\n    </div>\n), document.getElementById('root'));\n\nregisterServiceWorker();\n"],"sourceRoot":""}