{"version":3,"sources":["components/auth/LoginForm.js","components/Loading.js","components/auth/Auth.js","components/svgs.js","components/auth/Login.js","components/auth/RegisterForm.js","components/auth/Register.js","lib/configWindow.js","api/solutions.js","config.js","views/Demo.js","components/Nav.js","components/View.js","components/Error.js","api/me.js","views/Account.js","components/ConfigWizard.js","lib/authWindow.js","components/Instance.js","views/SolutionsMine.js","views/SolutionsDiscover.js","components/AuthWizard.js","views/Authentications.js","Router.js","index.js"],"names":["LoginForm","onLogin","this","props","styles","field","marginTop","btnSpan","marginLeft","loginContainer","backgroundColor","white","minWidth","maxWidth","height","position","top","left","right","margin","paper","padding","overflow","buttonsDiv","textAlign","loginBtn","float","loginHeader","marginBottom","className","style","variant","ref","elem","form","onSubmit","e","preventDefault","username","usernameElem","value","password","passwordElem","inputRef","input","label","placeholder","fullWidth","type","color","href","icon","React","Component","Loading","spinner","width","display","alignItems","justifyContent","loading","children","auth","isAuthenticated","sessionStorage","getItem","authenticate","cb","console","log","setItem","signout","fetch","method","credentials","then","res","catch","err","PrivateRoute","component","rest","Route","render","Redirect","to","pathname","state","from","location","RedirectMain","MOLogo","xmlns","viewBox","in","values","fill","fillRule","d","transform","MOLogoWhite","Login","redirectToReferrer","login","data","setState","body","JSON","stringify","headers","ok","json","alert","error","src","alt","RegisterForm","onRegister","name","nameElem","autoFocus","required","Register","success","showError","register","response","setTimeout","window","explain","paddingBottom","openConfigWindow","configWindow","open","undefined","configFinished","onmessage","close","postMessage","inProgress","errors","visibleValues","reduce","externalId","configValues","addEventListener","checkWindow","closed","removeEventListener","listSolutions","listSolutionInstances","createSolutionInstance","id","updateSolutionInstance","solutionInstanceId","enabled","updateSolutionInstanceConfig","deleteSolutionInstance","Demo","solutions","instances","loadinginstances","loadingSolutions","listInstances","onClickActivateIntegration","title","popupUrl","onClickDeactivateIntegration","onReconfigureIntegration","config","length","calculateInstancesSize","calculateSolutionSize","map","i","onClick","w","parent","calculateSize","renderSolutions","renderInstances","PureComponent","Nav","solutionsOpen","handleSolutionsClick","classes","root","Link","link","button","inset","primary","timeout","unmountOnExit","disablePadding","nested","borderRadius","whiteSpace","withStyles","theme","palette","background","paddingLeft","spacing","unit","textDecoration","View","header","fontWeight","fontSize","container","minHeight","content","withTheme","msg","listAuths","getAuthEditUrl","authId","getAuthCreateUrl","externalAuthId","Account","email","userInfo","statusText","bold","ConfigWizard","ready","handleIframeEvents","onClose","iframe","createRef","flex","border","boxSizing","loadingScreen","bottom","openAuthWindow","url","authWindow","checkClosedWindow","Instance","instanceState","configWizardSrc","authExternalId","authUrlParams","openWizard","openInIframe","addCustomValidation","onClickConfigure","onClickConfigureWithValidation","onClickConfigureInIframe","onClickEnable","get","onClickDelete","loadAllSolutionInstances","closeIframe","onCreateAuth","handleChange","event","target","controls","pill","marginRight","item","textFields","key","expandIcon","onChange","InputLabelProps","shrink","disabled","SolutionsMine","list","fontFamily","solutionInstances","buildList","SolutionsDiscover","text","grid","index","divider","secondary","onUseWorkflowClick","AuthWizard","Authentications","headerOptions","headerOption","advancedInput","auths","params","shouldOpenInFrame","iframeURL","loadAuths","openAuthWizard","showAuthWindow","direction","align","control","checked","App","Switch","exact","path","createMuiTheme","blue","ReactDOM","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.333e7463.chunk.js","sourcesContent":["import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { white } from '@material-ui/core/colors/';\nimport PersonAdd from '@material-ui/icons/PersonAdd';\nimport Input from '@material-ui/core/Input';\nimport Typography from '@material-ui/core/Typography';\n\nclass LoginForm extends React.Component {\n  render() {\n    const { onLogin } = this.props;\n    const styles = {\n      field: { marginTop: 10 },\n      btnSpan: { marginLeft: 5 },\n      loginContainer: {\n        backgroundColor: white,\n        minWidth: 320,\n        maxWidth: 400,\n        height: 'auto',\n        position: 'absolute',\n        top: '20%',\n        left: 0,\n        right: 0,\n        margin: 'auto',\n      },\n      paper: {\n        padding: 20,\n        overflow: 'auto',\n      },\n      buttonsDiv: {\n        textAlign: 'center',\n        padding: 10,\n      },\n      loginBtn: {\n        marginTop: 20,\n        float: 'right',\n      },\n      loginHeader: {\n        textAlign: 'center',\n        marginBottom: 15,\n      },\n    };\n\n    return (\n      <div className=\"form-div\">\n        <div style={styles.loginContainer}>\n          <Paper style={styles.paper}>\n            <Typography style={styles.loginHeader} variant=\"headline\">\n              Login to MO Solutions Integration\n            </Typography>\n            <form\n              ref={(elem) => (this.form = elem)}\n              onSubmit={(e) => {\n                e.preventDefault();\n                return onLogin({\n                  username: this.usernameElem.value,\n                  password: this.passwordElem.value,\n                });\n              }}\n            >\n              <Input\n                inputRef={(input) => (this.usernameElem = input)}\n                label=\"Username\"\n                placeholder=\"user\"\n                fullWidth={true}\n              />\n              <Input\n                inputRef={(input) => (this.passwordElem = input)}\n                style={{ marginTop: 10 }}\n                label=\"Password\"\n                placeholder=\"pass\"\n                fullWidth={true}\n                type=\"password\"\n              />\n\n              <Button style={styles.loginBtn} variant=\"outlined\" color=\"primary\" type=\"submit\">\n                Login\n              </Button>\n            </form>\n          </Paper>\n\n          <div style={styles.buttonsDiv}>\n            <Button label=\"Register\" href=\"/register\" icon={<PersonAdd />} color=\"secondary\">\n              Register New Account\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nclass Loading extends React.Component {\n    render() {\n        const styles = {\n            container: {\n                width: \"100%\",\n                height: \"100%\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n            }\n        };\n\n        const spinner = (\n            <div style={styles.container}>\n                <CircularProgress/>\n            </div>\n        );\n\n        return this.props.loading ? spinner : this.props.children;\n    }\n}\n\nexport default Loading;\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nexport const auth = {\n  isAuthenticated: sessionStorage.getItem('userLogged') || false,\n\n  authenticate(cb) {\n    console.log(cb);\n    this.isAuthenticated = true;\n    sessionStorage.setItem('userLogged', true);\n\n    if (typeof cb === 'function') {\n      cb(true);\n    }\n  },\n\n  signout(cb) {\n    fetch('/api/logout', {\n      method: 'POST',\n      credentials: 'include',\n    })\n      .then((res) => {\n        this.isAuthenticated = false;\n        if (typeof cb === 'function') {\n          // user was logged out\n          cb(true);\n        }\n      })\n      .catch((err) => {\n        console.log('Error logging out user.');\n        if (typeof cb === 'function') {\n          // user was not logged out\n          cb(false);\n        }\n      });\n  },\n};\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      auth.isAuthenticated ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: '/login',\n            state: { from: props.location },\n          }}\n        />\n      )\n    }\n  />\n);\n\nexport const RedirectMain = (props) =>\n  auth.isAuthenticated ? (\n    <Redirect {...props} to=\"/solutions/discover\" />\n  ) : (\n    <Redirect {...props} to=\"/login\" />\n  );\n","import React from 'react';\r\n\r\nexport function MOLogo() {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"110\"\r\n      height=\"80\"\r\n      className=\"logo-header logo-colour\"\r\n      viewBox=\"0 0 149 110\"\r\n    >\r\n      <defs>\r\n        <filter>\r\n          <feColorMatrix\r\n            in=\"SourceGraphic\"\r\n            values=\"0 0 0 0 0.086275 0 0 0 0 0.105882 0 0 0 0 0.188235 0 0 0 1.000000 0\"\r\n          ></feColorMatrix>\r\n        </filter>\r\n      </defs>\r\n      <g fill=\"#161b30\" fillRule=\"evenodd\">\r\n        <path\r\n          d=\"M170.544 107.346a22.029 22.029 0 01-3.03 8.57 27.357 27.357 0 01-6.039 6.96 29.92 29.92 0 01-5.391 3.542 30.908 30.908 0 01-6.036 2.328 26.56 26.56 0 01-6.364.95c-3.218.081-6.164-.376-8.862-1.37-2.7-1-4.998-2.442-6.912-4.29-1.932-1.801-3.356-3.958-4.313-6.433-.934-2.48-1.285-5.186-1.002-8.121.3-2.95 1.211-5.729 2.694-8.363 1.482-2.63 3.398-5 5.758-7.08a30.043 30.043 0 018.082-5.13 28.167 28.167 0 019.499-2.293c2.224-.132 4.35.012 6.374.403 2.02.412 3.92 1.054 5.65 1.922 1.76.885 3.31 1.954 4.665 3.225a17.19 17.19 0 014.378 6.681c.95 2.58 1.225 5.41.849 8.5\"\r\n          transform=\"translate(-48 -65)\"\r\n        ></path>\r\n        <path\r\n          d=\"M180.2 107.533a32.125 32.125 0 01-2.348 8.491 36.69 36.69 0 01-4.446 7.626 41.408 41.408 0 01-6.025 6.465 40.257 40.257 0 01-7.436 5.094c-2.627 1.422-5.392 2.506-8.297 3.3a37.57 37.57 0 01-8.878 1.309c-2.983.069-5.808-.218-8.466-.849-2.688-.638-5.145-1.56-7.39-2.821a32.35 32.35 0 01-1.932-1.19c.507 2.692 1.007 5.387 1.538 8.068-3.318.08-6.619.161-9.898.235-1.515-7.837-3.038-15.72-4.576-23.666-.804-4.124-1.618-8.27-2.415-12.43-2.116 4.798-4.226 9.582-6.28 14.302-2.053 4.695-4.105 9.348-6.115 13.96-1.727.491-3.478.977-5.183 1.457-7.064-6.054-14.097-12.112-21.12-18.142 1.785 8.562 3.58 17.043 5.354 25.484-3.12.072-6.208.152-9.285.218a7097.63 7097.63 0 01-4.31-20.057c-1.438-6.744-2.9-13.556-4.345-20.379a967.82 967.82 0 007.242-2.28c8.876 7.528 17.774 15.08 26.724 22.656 2.54-5.846 5.12-11.79 7.712-17.747a19337.8 19337.8 0 017.985-18.287c2.54-.8 5.086-1.6 7.65-2.412.579 3.014 1.144 6.016 1.72 9.013.16.873.322 1.734.49 2.596.508-.9 1.039-1.782 1.637-2.641a39.914 39.914 0 015.62-6.633 41.063 41.063 0 017.126-5.4 41.078 41.078 0 018.29-3.795 38.314 38.314 0 019.07-1.785c3.154-.185 6.16-.012 8.986.57 2.837.59 5.464 1.524 7.864 2.773 2.426 1.275 4.587 2.832 6.453 4.678a26.043 26.043 0 014.55 6.251 26.242 26.242 0 012.564 7.507c.494 2.684.54 5.497.17 8.46m-2.913-31.913c-13.603-7.877-33.218-11.873-54.332-10.27-21.117 1.615-39.533 8.2-52.976 17.41-13.085 8.956-21.315 20.522-21.94 32.451-.626 11.927 6.266 22.225 17.963 29.576 11.798 7.42 38.078 11.784 48.406 11.651 1.304-.018 2.307-.027 3.075-.04.008-.009.012-.023.023-.035-.1-.003-.116-.009.01-.009l-.01.009c.617.015 4.565-.025-.023.036-4.657 6.287-9.25 12.49-13.761 18.602 9.465-4.693 19.13-9.48 28.96-14.36 10.031-4.979 20.27-10.066 30.705-15.246h-.013c9.071-4.348 16.89-9.8 22.695-15.99 5.89-6.29 9.303-10.334 10.75-20.725 1.443-10.384-5.8-25.105-19.532-33.06\"\r\n          transform=\"translate(-48 -65)\"\r\n        ></path>\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport function MOLogoWhite() {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"110\"\r\n      height=\"80\"\r\n      className=\"logo-header logo-white\"\r\n      viewBox=\"0 0 149 110\"\r\n    >\r\n      <g fill=\"#FFF\" fillRule=\"evenodd\">\r\n        <path d=\"M122.544 42.346a22.029 22.029 0 01-3.03 8.57 27.357 27.357 0 01-6.039 6.96 29.92 29.92 0 01-5.391 3.542 30.908 30.908 0 01-6.036 2.328 26.56 26.56 0 01-6.364.95c-3.218.081-6.164-.376-8.862-1.37-2.7-1-4.998-2.442-6.912-4.29-1.932-1.801-3.356-3.958-4.313-6.433-.934-2.48-1.285-5.186-1.002-8.121.3-2.95 1.211-5.729 2.694-8.363 1.482-2.63 3.398-5 5.758-7.08a30.043 30.043 0 018.082-5.13 28.167 28.167 0 019.499-2.293c2.224-.132 4.35.012 6.374.403 2.02.412 3.92 1.054 5.65 1.922 1.76.885 3.31 1.954 4.665 3.225a17.19 17.19 0 014.378 6.681c.95 2.58 1.225 5.41.849 8.5\"></path>\r\n        <path d=\"M132.2 42.533a32.125 32.125 0 01-2.348 8.491 36.69 36.69 0 01-4.446 7.626 41.408 41.408 0 01-6.025 6.465 40.257 40.257 0 01-7.436 5.094c-2.627 1.422-5.392 2.506-8.297 3.3a37.57 37.57 0 01-8.878 1.309c-2.983.069-5.808-.218-8.466-.849-2.688-.638-5.145-1.56-7.39-2.821a32.35 32.35 0 01-1.932-1.19c.507 2.692 1.007 5.387 1.538 8.068-3.318.08-6.619.161-9.898.235-1.515-7.837-3.038-15.72-4.576-23.666-.804-4.124-1.618-8.27-2.415-12.43-2.116 4.798-4.226 9.582-6.28 14.302-2.053 4.695-4.105 9.348-6.115 13.96-1.727.491-3.478.977-5.183 1.457-7.064-6.054-14.097-12.112-21.12-18.142 1.785 8.562 3.58 17.043 5.354 25.484-3.12.072-6.208.152-9.285.218a7097.63 7097.63 0 01-4.31-20.057c-1.438-6.744-2.9-13.556-4.345-20.379a967.82 967.82 0 007.242-2.28c8.876 7.528 17.774 15.08 26.724 22.656 2.54-5.846 5.12-11.79 7.712-17.747A19337.8 19337.8 0 0160.01 23.35c2.54-.8 5.086-1.6 7.65-2.412.579 3.014 1.144 6.016 1.72 9.013.16.873.322 1.734.49 2.596.508-.9 1.039-1.782 1.637-2.641a39.914 39.914 0 015.62-6.633 41.063 41.063 0 017.126-5.4 41.078 41.078 0 018.29-3.795 38.314 38.314 0 019.07-1.785c3.154-.185 6.16-.012 8.986.57 2.837.59 5.464 1.524 7.864 2.773 2.426 1.275 4.587 2.832 6.453 4.678a26.043 26.043 0 014.55 6.251 26.242 26.242 0 012.564 7.507c.494 2.684.54 5.497.17 8.46m-2.913-31.913C115.684 2.742 96.07-1.254 74.955.349c-21.117 1.615-39.533 8.2-52.976 17.41C8.894 26.714.664 38.28.039 50.21c-.626 11.927 6.266 22.225 17.963 29.576C29.8 87.206 56.08 91.57 66.408 91.437c1.304-.018 2.307-.027 3.075-.04.008-.009.012-.023.023-.035-.1-.003-.116-.009.01-.009l-.01.009c.617.015 4.565-.025-.023.036-4.657 6.287-9.25 12.49-13.761 18.602 9.465-4.693 19.13-9.48 28.96-14.36 10.031-4.979 20.27-10.066 30.705-15.246h-.013c9.071-4.348 16.89-9.8 22.695-15.99 5.89-6.29 9.303-10.334 10.75-20.725 1.443-10.384-5.8-25.105-19.532-33.06\"></path>\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n","import React from 'react';\nimport LoginForm from './LoginForm';\nimport { Redirect } from 'react-router-dom';\nimport Loading from '../Loading';\nimport { auth } from './Auth';\nimport { MOLogo } from '../svgs';\n\nexport default class Login extends React.Component {\n  state = {\n    loading: false,\n    redirectToReferrer: false,\n  };\n\n  login = (data) => {\n    console.log(data);\n    console.log('Logging in ' + data.username);\n    this.setState({\n      loading: true,\n    });\n    fetch('/api/login', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          auth.authenticate(() => {\n            this.setState({\n              redirectToReferrer: true,\n              loading: false,\n            });\n          });\n        } else {\n          res.json().then((body) => {\n            alert(`Unable to login: ${body.error}`);\n            this.setState({\n              loading: false,\n            });\n          });\n        }\n      })\n      .catch((err) => {\n        console.error('Error logging in.', err);\n      });\n  };\n\n  render() {\n    const style = {\n      container: {\n        height: '300px',\n      },\n      warning: {\n        textAlign: 'center',\n        border: 'none',\n      },\n    };\n\n    const { from } = this.props.location.state || { from: { pathname: '/' } };\n    const { redirectToReferrer } = this.state;\n\n    if (redirectToReferrer) {\n      return <Redirect to={from} />;\n    }\n\n    return (\n      <div className=\"login-form\">\n        <div className=\"form-wrapper\">\n          <div className=\"logo-wrapper\">\n            <MOLogo />\n          </div>\n          <Loading loading={this.state.loading}>\n            <LoginForm onLogin={this.login} />\n          </Loading>\n        </div>\n        <div className=\"left-content\">\n          <div className=\"text-stripe\">\n            <div className=\"logo-vertical\">\n              <img src=\"/MO-secondary-logo-colour.webp\" alt=\"Logo Vertical\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { white } from '@material-ui/core/colors/';\nimport Input from '@material-ui/core/Input';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nclass RegisterForm extends React.Component {\n  render() {\n    const { onRegister } = this.props;\n    const styles = {\n      loginContainer: {\n        backgroundColor: white,\n        minWidth: 320,\n        maxWidth: 400,\n        height: 'auto',\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        margin: '30px auto',\n      },\n      paper: {\n        padding: 20,\n        overflow: 'auto',\n      },\n      buttonsDiv: {\n        textAlign: 'center',\n        padding: 10,\n      },\n      field: {\n        marginTop: 10,\n      },\n      loginBtn: {\n        marginTop: 20,\n        float: 'right',\n      },\n      btnSpan: {\n        marginLeft: 5,\n      },\n    };\n\n    return (\n      <div className=\"register-form\">\n        <div className=\"register-form-wrapper\" style={styles.loginContainer}>\n          <Paper style={styles.paper}>\n            {this.props.loading ? (\n              <div style={{ textAlign: 'center' }}>\n                <CircularProgress />\n              </div>\n            ) : (\n              <form\n                ref={(elem) => (this.form = elem)}\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  return onRegister({\n                    name: this.nameElem.value,\n                    username: this.usernameElem.value,\n                    password: this.passwordElem.value,\n                  });\n                }}\n              >\n                <h3 style={{ textAlign: 'center' }}> New User Form </h3>\n\n                <Input\n                  inputRef={(input) => (this.nameElem = input)}\n                  autoFocus={true}\n                  label=\"Name\"\n                  placeholder=\"Full Name\"\n                  fullWidth={true}\n                  style={{ marginBottom: 10 }}\n                  required\n                />\n\n                <Input\n                  inputRef={(input) => (this.usernameElem = input)}\n                  label=\"Username\"\n                  placeholder=\"Username\"\n                  fullWidth={true}\n                  style={{ marginBottom: 10 }}\n                  required\n                />\n\n                <Input\n                  inputRef={(input) => (this.passwordElem = input)}\n                  label=\"Password\"\n                  placeholder=\"Password\"\n                  fullWidth={true}\n                  type=\"password\"\n                  required\n                />\n\n                <Button style={styles.loginBtn} variant=\"raised\" color=\"primary\" type=\"submit\">\n                  Register User\n                </Button>\n              </form>\n            )}\n          </Paper>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n","import React from 'react';\nimport { MOLogo } from '../svgs';\nimport RegisterForm from './RegisterForm';\n\nexport default class Register extends React.Component {\n  state = {\n    redirectToReferrer: false,\n    error: false,\n    success: false,\n    loading: false,\n  };\n\n  showError = () =>\n    this.setState({\n      error: true,\n      loading: false,\n    });\n\n  register = (data) => {\n    this.setState({\n      loading: true,\n    });\n    fetch('/api/register', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      credentials: 'include',\n    })\n      .then((response) => {\n        if (response.ok) {\n          this.setState({\n            success: true,\n            loading: false,\n          });\n\n          setTimeout(() => (window.location = '/login'), 1000);\n        } else {\n          this.showError();\n        }\n      })\n      .catch((err) => {\n        this.showError();\n      });\n  };\n\n  explain =\n    'This will create a new in-memory user account in the local Express backend that will persist until the backend is restarted.';\n\n  render() {\n    return (\n      <div className=\"register-component\">\n        <div className=\"form-wrapper\">\n          <div className=\"logo-wrapper\">\n            <MOLogo />\n          </div>\n          <div className=\"form-content\">\n            <h1 style={{ textAlign: 'center' }}>Register a New User</h1>\n            <div\n              style={{\n                textAlign: 'center',\n                width: '500px',\n                margin: 'auto',\n                paddingBottom: '10px',\n              }}\n            >\n              {this.explain}\n            </div>\n\n            {this.state.error ? (\n              <h3 style={{ color: 'red', textAlign: 'center' }}>Registration failed</h3>\n            ) : (\n              ''\n            )}\n            {this.state.success ? (\n              <h3 style={{ color: 'green', textAlign: 'center' }}>Registration success</h3>\n            ) : (\n              ''\n            )}\n            <RegisterForm onRegister={this.register} loading={this.state.loading} />\n          </div>\n        </div>\n        <div className=\"left-content\">\n          <div className=\"text-stripe\">\n            <div className=\"logo-vertical\">\n              <img src=\"/MO-secondary-logo-colour.webp\" alt=\"Logo Vertical\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","export const openConfigWindow = () => {\n    // Must open window from user interaction code otherwise it is likely\n    // to be blocked by a popup blocker:\n    const configWindow = window.open(\n        undefined,\n        '_blank',\n        'width=500,height=500,scrollbars=no',\n    );\n\n    // Listen to popup messages\n    let configFinished = false;\n    const onmessage = e => {\n        console.log('message', e.data.type, e.data);\n\n        if (e.data.type === 'tray.configPopup.error') {\n            // Handle popup error message\n            alert(`Error: ${e.data.err}`);\n            configWindow.close();\n        }\n        if (e.data.type === 'tray.configPopup.cancel') {\n            configWindow.close();\n        }\n        if (e.data.type === 'tray.configPopup.finish') {\n            // Handle popup finish message\n            configFinished = true;\n            configWindow.close();\n        }\n        if (e.data.type === 'tray.configPopup.validate') {\n            // Return validation in progress\n            configWindow.postMessage({\n                type: 'tray.configPopup.client.validation',\n                data: {\n                    inProgress: true,\n                }\n            }, '*');\n\n            setTimeout(() => {\n                    // Add errors to all inputs\n                    const errors = e.data.data.visibleValues.reduce(\n                        (errors, externalId) => {\n                            console.log(`Visible ${externalId} value:`, e.data.data.configValues[externalId]);\n                            // Uncomment next line to set an error message\n                            // errors[externalId] = 'Custom error message';\n                            return errors;\n                        },\n                        {}\n                    );\n\n                    // Return validation\n                    configWindow.postMessage({\n                        type: 'tray.configPopup.client.validation',\n                        data: {\n                            inProgress: false,\n                            errors: errors,\n                        }\n                    }, '*');\n                },\n                2000\n            );\n        }\n    };\n    window.addEventListener('message', onmessage);\n\n    // Check if popup window has been closed before finishing the configuration.\n    // We use a polling function due to the fact that some browsers may not\n    // display prompts created in the beforeunload event handler.\n    const CHECK_TIMEOUT = 1000;\n    const checkWindow = () => {\n        if (configWindow.closed) {\n            // Handle popup closing\n            if (!configFinished) {\n                alert('Configuration not finished');\n            } else {\n                alert(\n                    'Configuration finished. You can enable the new ' +\n                    'solution instance from the \"Solutions > My Instances\" section'\n                );\n                console.log('Configuration finished');\n            }\n            window.removeEventListener('message', onmessage);\n        } else {\n            setTimeout(checkWindow, CHECK_TIMEOUT);\n        }\n    }\n\n    checkWindow();\n\n    return configWindow;\n};\n","export const listSolutions = () =>\n    fetch('/api/solutions', {credentials: 'include'})\n        .then(async res => ({\n            ok: res.ok,\n            body: await res.json(),\n        }));\n\nexport const listSolutionInstances = () =>\n    fetch('/api/solutionInstances', {credentials: 'include'})\n        .then(async res => ({\n            ok: res.ok,\n            body: await res.json(),\n        }));\n\nexport const createSolutionInstance = (id, name) =>\n    fetch('/api/solutionInstances', {\n        body: JSON.stringify({\n            id: id,\n            name: name,\n        }),\n        headers: {\n            'content-type': 'application/json',\n        },\n        method: 'POST',\n        credentials: 'include',\n    }).then(async res => ({\n        ok: res.ok,\n        body: await res.json(),\n    }));\n\nexport const updateSolutionInstance = (solutionInstanceId, enabled) =>\n    fetch(`/api/solutionInstance/${solutionInstanceId}`, {\n        method: 'PATCH',\n        credentials: 'include',\n        headers: {\n            'content-type': 'application/json',\n        },\n        body: JSON.stringify({\n            enabled: enabled,\n        }),\n    }).then(async res => ({\n        ok: res.ok,\n    }));\n\nexport const updateSolutionInstanceConfig = solutionInstanceId =>\n    fetch(`/api/solutionInstance/${solutionInstanceId}/config`, {\n        method: 'PATCH',\n        credentials: 'include',\n    }).then(async res => ({\n        ok: res.ok,\n        body: await res.json(),\n    }));\n\nexport const getSolutionInstance = id =>\n    fetch(`/api/solutionInstance/${id}`, {credentials: 'include'})\n        .then(async res => ({\n            ok: res.ok,\n            body: await res.json(),\n        }));\n\nexport const deleteSolutionInstance = id =>\n    fetch(`/api/solutionInstance/${id}`, {\n            method: 'DELETE',\n            credentials: 'include',\n        })\n        .then(async res => ({\n            ok: res.ok,\n        }));\n","export default {\n    username: 'a',\n    password: 'a',\n};\n","import React from 'react';\nimport Loading from '../components/Loading';\n\n// Update to use Solutions\nimport { openConfigWindow } from '../lib/configWindow';\n// Add ability to remove solution instance\nimport {\n    listSolutions,\n    listSolutionInstances,\n    createSolutionInstance,\n    deleteSolutionInstance,\n    updateSolutionInstanceConfig,\n} from '../api/solutions';\n\nimport './demo.css';\n\nimport config from '../config.js';\n\nexport class Demo extends React.PureComponent {\n    state = {\n        solutions: null,\n        instances: null,\n        loadinginstances: true,\n        loadingSolutions: true,\n    }\n\n    componentDidMount() {\n        fetch('/api/login', {\n            method: 'POST',\n            body: JSON.stringify({\n                username: config.username,\n                password: config.password,\n            }),\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        }).then(() => {\n            this.listSolutions();\n            this.listInstances();\n        });\n    }\n\n    calculateInstancesSize() {\n        if (!this.state.instances || !this.state.instances.length) {\n            return 0;\n        }\n\n        return 40 + this.state.instances.length * 18;\n    }\n\n    calculateSolutionSize() {\n        if (!this.state.solutions || !this.state.solutions.length) {\n            return 0;\n        }\n\n        return this.state.solutions.length * 30;\n    }\n\n    calculateSize() {\n        const standardContentHeight = 139;\n        return standardContentHeight + this.calculateInstancesSize() + this.calculateSolutionSize();\n    }\n\n    listSolutions = () => {\n        listSolutions().then(({body}) => {\n            this.setState({solutions: body.data, loadingSolutions: false});\n        });\n    }\n\n    listInstances = () => {\n        listSolutionInstances().then(({body}) => {\n            this.setState({instances: body.data, loadinginstances: false});\n        });\n    }\n\n    onClickActivateIntegration = (id, title) => {\n        const configWindow = openConfigWindow();\n\n        createSolutionInstance(id, title).then(({body}) => {\n            // After we generate the popup URL, set it to the previously opened\n            // window:\n            configWindow.location = body.data.popupUrl;\n            this.listInstances();\n        });\n    }\n\n    onClickDeactivateIntegration = id => {\n        deleteSolutionInstance(id).then(this.listInstances);\n    }\n\n    onReconfigureIntegration = id => {\n        const configWindow = openConfigWindow();\n\n        updateSolutionInstanceConfig(id).then(({body}) => {\n            // After we generate the popup URL, set it to the previously opened\n            // window:\n            configWindow.location = body.data.popupUrl;\n        });\n    }\n\n    renderSolutions() {\n        return this.state.solutions && this.state.solutions.map(i => {\n            return (\n                <div className=\"integration-container\">\n                    <button className=\"integration-name\">{i.title}</button>\n                    <span\n                        className=\"activate\"\n                        onClick={() => this.onClickActivateIntegration(i.id, i.title)}\n                    >\n                        Activate\n                    </span>\n                </div>\n            );\n        });\n    }\n\n    renderInstances() {\n        if (!this.state.instances || !this.state.instances.length) return null;\n\n        return (\n            <div className=\"workflow-container\">\n                <div className=\"workflow-header\">\n                    <h3 className=\"app-name\">App Name</h3>\n                </div>\n\n                {this.state.instances.map(w => {\n                    return (\n                        <div className=\"workflow-container\">\n                            <button>\n                                {w.name}\n                            </button>\n                            <button\n                                className=\"deactivate\"\n                                onClick={() => this.onClickDeactivateIntegration(w.id)}\n                            >\n                                Delete\n                            </button>\n                            <button\n                                className=\"reconfigure\"\n                                onClick={() => this.onReconfigureIntegration(w.id)}\n                            >\n                                Reconfigure\n                            </button>\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n\n    render() {\n        window.parent.postMessage({\n            type: 'tray_demo_size',\n            height: this.calculateSize() + 'px',\n        }, '*');\n\n        return (\n            <Loading loading={this.state.loadinginstances && this.state.loadingSolutions}>\n                <div className=\"demo-container\">\n                    <div>\n                        <h2 className=\"header\">Available Integrations</h2>\n                        {this.renderSolutions()}\n                    </div>\n                    <div>\n                        <h2 className=\"header\">Active Integrations</h2>\n\n                        {this.state.instances && this.state.instances.length ?\n                            <p>You have authorized the following applications with <button>Asana Connect</button>.</p> :\n                            <p>Applications you authorize with <button>Asana Connect</button> will appear here.</p>\n                        }\n\n                        {this.renderInstances()}\n                    </div>\n                    <div className=\"footer\">\n                        <button>Manage Developer Apps</button>\n                    </div>\n                </div>\n            </Loading>\n        );\n    }\n}\n\nexport default Demo;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport AccountIcon from '@material-ui/icons/AccountCircle';\nimport AccountBox from '@material-ui/icons/AccountBox';\nimport PlugIcon from '@material-ui/icons/SettingsInputComponent';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport CircleIcon from '@material-ui/icons/FiberManualRecord';\nimport { Link } from 'react-router-dom';\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        height: '100%',\n        maxWidth: 250,\n        backgroundColor: theme.palette.background.paper,\n        paddingBottom: 40,\n    },\n    nested: {\n        paddingLeft: theme.spacing.unit * 4,\n    },\n    link: {\n        textDecoration: \"none\",\n    }\n});\n\nclass Nav extends React.PureComponent {\n    state = {\n        solutionsOpen: true,\n    };\n\n    handleSolutionsClick = () => {\n        this.setState({solutionsOpen: !this.state.solutionsOpen});\n    };\n\n    render() {\n        const {classes} = this.props;\n\n        return (\n            <div>\n                <div className={classes.root}>\n                    <List\n                        component=\"nav\"\n                    >\n                        <Link to=\"/account\" className={classes.link}>\n                            <ListItem button>\n                                <ListItemIcon>\n                                    <AccountIcon/>\n                                </ListItemIcon>\n                                <ListItemText inset primary=\"Account\"/>\n\n                            </ListItem>\n                        </Link>\n\n                        <Link to=\"/authentications\" className={classes.link}>\n                            <ListItem button>\n                                <ListItemIcon>\n                                    <AccountBox/>\n                                </ListItemIcon>\n                                <ListItemText inset primary=\"Authentications\"/>\n\n                            </ListItem>\n                        </Link>\n\n                        <ListItem button onClick={this.handleSolutionsClick}>\n                            <ListItemIcon>\n                                <PlugIcon/>\n                            </ListItemIcon>\n                            <ListItemText inset primary=\"Solutions\"/>\n                            {this.state.solutionsOpen ? <ExpandLess/> : <ExpandMore/>}\n                        </ListItem>\n\n                        <Collapse in={this.state.solutionsOpen} timeout=\"auto\" unmountOnExit>\n                            <List component=\"div\" disablePadding>\n\n                                <Link className={classes.link} to=\"/solutions/mine\">\n                                    <ListItem button className={classes.nested}>\n                                        <ListItemIcon>\n                                            <CircleIcon style={{borderRadius: 20}}/>\n                                        </ListItemIcon>\n                                        <ListItemText inset primary=\"My Instances\" style={{whiteSpace: 'nowrap'}}/>\n                                    </ListItem>\n                                </Link>\n\n                                <Link className={classes.link} to=\"/solutions/discover\">\n                                    <ListItem button className={classes.nested}>\n                                        <ListItemIcon>\n                                            <CircleIcon style={{borderRadius: 20}}/>\n                                        </ListItemIcon>\n                                        <ListItemText inset primary=\"Discover\"/>\n                                    </ListItem>\n                                </Link>\n\n                            </List>\n                        </Collapse>\n                    </List>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Nav);\n","import React from 'react';\nimport Nav from './Nav';\nimport { withTheme } from '@material-ui/core/styles';\nimport { MOLogoWhite } from './svgs';\n\nclass View extends React.Component {\n  render() {\n    const styles = {\n      header: {\n        backgroundColor: '#2196F3',\n        padding: '12px 10px',\n        color: 'white',\n        fontWeight: 500,\n        fontSize: '1.3rem',\n      },\n      container: {\n        backgroundColor: '#F5F5F5',\n        display: 'flex',\n        minHeight: 500,\n        paddingBottom: 40,\n      },\n      content: { width: '100%' },\n    };\n\n    return (\n      <div className=\"view-container\">\n        <div className=\"header-bar\" style={styles.header}>\n          <div className=\"header-logo\">\n            <MOLogoWhite />\n          </div>\n          <h1>MO Solutions</h1>\n        </div>\n        <div style={styles.container}>\n          <Nav />\n          <div style={styles.content}>{this.props.children}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withTheme()(View);\n","import React from 'react';\nimport {withTheme} from '@material-ui/core/styles';\n\nconst styles = {\n    container: {\n        width: \"100%\",\n        height: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        color: \"crimson\",\n        padding: '0 20px',\n    }\n};\n\nconst Error = ({msg}) => (\n    <div style={styles.container}>\n        <div>{JSON.stringify(msg, null, 4)}</div>\n    </div>\n);\n\nexport default withTheme()(Error);","export const me = () =>\n    fetch('/api/me', {credentials: 'include'})\n        .then(async res => ({\n            ok: res.ok,\n            body: await res.json(),\n            statusText: res.statusText,\n        }))\n\nexport const listAuths = () =>\n    fetch('/api/auths', {credentials: 'include'})\n        .then(async res => ({\n            ok: res.ok,\n            body: await res.json(),\n        }))\n\nexport const getAuthEditUrl = (authId) =>\n    fetch('/api/auth', {\n        body: JSON.stringify({\n            authId\n        }),\n        headers: {\n            'content-type': 'application/json',\n        },\n        method: 'POST',\n        credentials: 'include'\n    })\n        .then(async res => ({\n            ok: res.ok,\n            body: await res.json(),\n        }))\n\nexport const getAuthCreateUrl = (solutionInstanceId, externalAuthId) =>\n    fetch('/api/auth/create', {\n        body: JSON.stringify({\n            solutionInstanceId,\n            externalAuthId\n        }),\n        headers: {\n            'content-type': 'application/json',\n        },\n        method: 'POST',\n        credentials: 'include'\n    })\n        .then(async res => ({\n            ok: res.ok,\n            body: await res.json(),\n        }))\n","import React from 'react';\nimport View from '../components/View';\nimport Error from '../components/Error';\nimport Typography from '@material-ui/core/Typography';\nimport Loading from '../components/Loading';\n\nimport { me } from '../api/me';\n\nexport class Account extends React.PureComponent {\n\n    state = {\n        loading: true,\n        error: false,\n        email: '',\n        username: '',\n        userInfo: {},\n    }\n\n    componentDidMount() {\n        me().then(({ok, body, statusText}) => {\n            if (ok) {\n                this.setState({\n                    username: body.username,\n                    email: body.email,\n                    loading: false,\n                });\n            } else {\n                this.setState({\n                    error: statusText,\n                    loading: false,\n                });\n            }\n        });\n    }\n\n    render() {\n        const style = {\n            bold: {\n                fontWeight: 'bold'\n            },\n        };\n\n        return (\n            <View>\n                <Loading loading={this.state.loading}>\n                    {this.state.error ?\n                        <Error msg={this.state.error}/> :\n                        <div>\n                            <Typography variant=\"headline\" style={{margin: \"20px\"}}>\n                                Your Tray account\n                            </Typography>\n                            <div style={{padding: \"10px\"}}>\n                                <div>\n                                    <span style={style.bold}>Tray username: </span>\n                                    {this.state.username}\n                                </div>\n                                <div>\n                                    <span style={style.bold}>Tray email: </span>\n                                    {this.state.email}\n                                </div>\n                            </div>\n                        </div>\n                    }\n                </Loading>\n            </View>\n        );\n    }\n}\n\nexport default Account;\n","import {withTheme} from \"@material-ui/core/styles/index\";\nimport React from 'react';\n\nexport class ConfigWizard extends React.PureComponent {\n    state = {\n        ready: false,\n    };\n\n    constructor(props) {\n        super(props);\n        this.iframe = React.createRef();\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"message\", this.handleIframeEvents);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"message\", this.handleIframeEvents);\n    }\n\n    handleIframeEvents = (e) => {\n        console.log(`${e.data.type} event received`);\n        // Here we should handle all event types\n        if (e.data.type === 'tray.configPopup.error') {\n            alert(`Error: ${e.data.err}`);\n        }\n        if (e.data.type === 'tray.configPopup.cancel') {\n            this.props.onClose();\n        }\n        if (e.data.type === 'tray.configPopup.ready') {\n            this.setState({ ready: true });\n        }\n        if (e.data.type === 'tray.configPopup.finish') {\n            this.props.onClose();\n        }\n    };\n\n    render() {\n        const styles = {\n            container: {\n                flex: 1,\n                position: 'relative',\n            },\n            iframe: {\n                width: '100%',\n                height: '100%',\n                minHeight: '500px',\n                border: '1px solid #2196f3',\n                borderRadius: '4px',\n                boxSizing: 'border-box',\n            },\n            loadingScreen: {\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0,\n                position: 'absolute',\n                background: 'white',\n                border: '1px solid #2196f3',\n                borderRadius: '4px',\n            }\n        };\n\n        return (\n            <div style={styles.container}>\n                <iframe\n                    ref={this.iframe}\n                    style={styles.iframe}\n                    src={this.props.src}\n                    title=\"Solution instance configurator\"\n                />\n                {!this.state.ready && <div style={styles.loadingScreen}>Loading...</div>}\n            </div>\n        )\n    }\n\n}\n\nexport default withTheme()(ConfigWizard);\n","export const openAuthWindow = (url) => {\n    // Must open window from user interaction code otherwise it is likely\n    // to be blocked by a popup blocker:\n    const authWindow = window.open(\n        undefined,\n        '_blank',\n        'width=500,height=500,scrollbars=no',\n    );\n\n    const onmessage = e => {\n        console.log('message', e.data.type, e.data);\n\n        if (e.data.type === 'tray.authPopup.error') {\n            // Handle popup error message\n            alert(`Error: ${e.data.error}`);\n            authWindow.close();\n        }\n        if (e.data.type === 'tray.authpopup.close' || e.data.type === 'tray.authpopup.finish') {\n            authWindow.close();\n        }\n    };\n    window.addEventListener('message', onmessage);\n\n    // Check if popup window has been closed\n    const CHECK_TIMEOUT = 1000;\n    const checkClosedWindow = () => {\n        if (authWindow.closed) {\n            window.removeEventListener('message', onmessage);\n        } else {\n            setTimeout(checkClosedWindow, CHECK_TIMEOUT);\n        }\n    }\n\n    checkClosedWindow();\n    authWindow.location = url;\n};\n","import Typography from '@material-ui/core/Typography';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Button from '@material-ui/core/Button';\nimport { withTheme } from \"@material-ui/core/styles/index\";\nimport React from 'react';\nimport Loading from './Loading';\nimport { get } from 'lodash';\n\nimport { openConfigWindow } from '../lib/configWindow';\n\nimport {\n    updateSolutionInstance,\n    updateSolutionInstanceConfig,\n    deleteSolutionInstance,\n} from '../api/solutions';\nimport {ConfigWizard} from \"./ConfigWizard\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {getAuthCreateUrl} from \"../api/me\";\nimport {openAuthWindow} from \"../lib/authWindow\";\n\nexport class Instance extends React.PureComponent {\n    state = {\n        error: false,\n        loading: false,\n        instanceState: undefined,\n        configWizardSrc: undefined,\n        authExternalId: undefined,\n        authUrlParams: ''\n    };\n\n    openWizard = (openInIframe, addCustomValidation = false) => {\n        updateSolutionInstanceConfig(this.props.id).then(({body}) => {\n            const url = addCustomValidation ? `${body.data.popupUrl}&customValidation=true` : body.data.popupUrl;\n\n            if (!openInIframe) {\n                const configWindow = openConfigWindow();\n                configWindow.location = url;\n            } else {\n                this.setState({\n                    configWizardSrc: url\n                })\n            }\n        });\n    };\n\n    onClickConfigure = () => {\n        this.openWizard(false,false);\n    };\n\n    onClickConfigureWithValidation = () => {\n        this.openWizard(false,true);\n    };\n\n    onClickConfigureInIframe = () => {\n        this.openWizard(true, false);\n    };\n\n    onClickEnable = () => {\n        const enabled = get(this.state, 'instanceState', this.props.enabled);\n        updateSolutionInstance(this.props.id, !enabled).then(()=>{\n            this.setState({instanceState: !enabled});\n        });\n    };\n\n    onClickDelete = () => {\n        deleteSolutionInstance(this.props.id).then(this.props.loadAllSolutionInstances);\n    }\n\n    closeIframe = () => {\n        this.setState({\n            configWizardSrc: undefined\n        })\n    };\n\n    onCreateAuth = () => {\n        getAuthCreateUrl(this.props.id, this.state.authExternalId)\n            .then(({body}) => {\n                openAuthWindow(`${body.data.popupUrl}&${this.state.authUrlParams}`);\n            })\n    };\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    render() {\n        const {id, name} = this.props;\n        const {configWizardSrc} = this.state;\n\n        const enabled = get(this.state, 'instanceState', this.props.enabled);\n\n        const styles = {\n            controls: {\n                margin: \"10px\",\n                float: \"right\",\n                maxWidth: '400px'\n            },\n            pill: {\n                backgroundColor: enabled ? \"#7ebc54\" : \"#df5252\",\n                borderRadius: \"4px\",\n                marginRight: \"10px\",\n                color: \"white\",\n                padding: \"3px 5px\",\n            },\n            item: {\n                width: '100%',\n                border: 'none',\n            },\n            name: {\n                marginTop: '2px'\n            },\n            button: {\n                width: \"100%\",\n                marginBottom: \"10px\"\n            },\n            textFields: {\n                width: \"100%\",\n                margin: \"10px 0\",\n            }\n        };\n\n        return (\n            <Loading loading={this.state.loading}>\n                <ExpansionPanel\n                    key={id}\n                    style={styles.item}\n                >\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon/>}>\n                        <span style={styles.pill}>\n                            {enabled ? \"enabled\" : \"disabled\"}\n                        </span>\n                        <Typography style={styles.name}>\n                            {name}\n                        </Typography>\n                    </ExpansionPanelSummary>\n\n                    <ExpansionPanelDetails>\n                        <div id=\"Controls\" style={styles.controls}>\n                            <Button\n                                style={styles.button}\n                                onClick={this.onClickEnable}\n                                variant=\"outlined\"\n                                color=\"primary\"\n                            >\n                                {enabled ? 'Disable' : 'Enable'}\n                            </Button>\n                            <Button\n                                style={styles.button}\n                                onClick={this.onClickConfigure}\n                                variant=\"outlined\"\n                                color=\"primary\"\n                            >\n                                Configure\n                            </Button>\n                            <Button\n                                style={styles.button}\n                                onClick={this.onClickConfigureWithValidation}\n                                variant=\"outlined\"\n                                color=\"primary\"\n                            >\n                                Configure with custom validation\n                            </Button>\n                            <Button\n                                style={styles.button}\n                                onClick={this.onClickConfigureInIframe}\n                                variant=\"outlined\"\n                                color=\"primary\"\n                            >\n                                Configure in iframe\n                            </Button>\n                            <Button\n                                style={styles.button}\n                                onClick={this.onClickDelete}\n                                variant=\"outlined\"\n                                color=\"primary\"\n                            >\n                                Delete\n                            </Button>\n                            <Typography variant=\"title\">\n                                Create auth\n                            </Typography>\n                            <TextField\n                                style={styles.textFields}\n                                label=\"Auth external id\"\n                                value={this.state.authExternalId}\n                                onChange={this.handleChange('authExternalId')}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                            <TextField\n                                style={styles.textFields}\n                                label=\"Advanced Url Params\"\n                                value={this.state.authUrlParams}\n                                onChange={this.handleChange('authUrlParams')}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                            <Button\n                                style={styles.button}\n                                onClick={this.onCreateAuth}\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                disabled={!this.state.authExternalId}\n                            >\n                                Create auth\n                            </Button>\n                        </div>\n                        {configWizardSrc && <ConfigWizard src={configWizardSrc} onClose={this.closeIframe}/>}\n\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n            </Loading>\n        );\n    }\n\n}\n\nexport default withTheme()(Instance);\n","import React from 'react';\nimport View from '../components/View';\nimport Error from '../components/Error';\nimport Typography from '@material-ui/core/Typography';\nimport { withTheme } from \"@material-ui/core/styles/index\";\nimport Loading from '../components/Loading';\nimport Instance from '../components/Instance';\n\nimport { listSolutionInstances } from '../api/solutions';\n\nexport class SolutionsMine extends React.PureComponent {\n\n    styles = {\n        list: {\n            maxWidth: \"1000px\",\n            margin: 'auto',\n            marginBottom: '30px',\n            fontFamily: \"Roboto, Helvetica, Arial, sans-serif\"\n        }\n    }\n\n    state = {\n        loading: true,\n        error: false,\n        solutionInstances: [],\n    }\n\n    componentDidMount() {\n        this.loadAllSolutionInstances();\n    }\n\n    loadAllSolutionInstances = () => {\n        listSolutionInstances()\n            .then(({ok, body}) => {\n                if (ok) {\n                    this.setState({\n                        solutionInstances: body.data,\n                        loading: false,\n                    });\n                } else {\n                    this.setState({\n                        error: body,\n                        loading: false,\n                    });\n                }\n            });\n    }\n\n    buildList(solutionInstances) {\n        return (\n            <div>\n                <div style={this.styles.list}>\n                    <Typography variant=\"headline\" style={{margin: \"20px\"}}>\n                        My Solution Instances\n                    </Typography>\n                    {\n                        solutionInstances.map(({id, name, enabled}) => (\n                            <Instance\n                                id={id}\n                                key={id}\n                                name={name}\n                                enabled={enabled}\n                                loadAllSolutionInstances={this.loadAllSolutionInstances}\n                            />\n                        ))\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <View>\n                <Loading loading={this.state.loading}>\n                    {this.state.error ?\n                        <Error msg={this.state.error}/> :\n                        this.buildList(this.state.solutionInstances)\n                    }\n                </Loading>\n            </View>\n        );\n    }\n\n}\n\nexport default withTheme()(SolutionsMine);\n","import React from 'react';\nimport View from '../components/View';\nimport Error from '../components/Error';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Loading from '../components/Loading';\n\nimport { openConfigWindow } from '../lib/configWindow';\nimport { listSolutions, createSolutionInstance } from '../api/solutions';\n\nexport class SolutionsDiscover extends React.PureComponent {\n\n    state = {\n        loading: true,\n        error: false,\n        solutions: [],\n    }\n\n    componentDidMount() {\n        listSolutions()\n            .then(({ok, body}) => {\n                if (ok) {\n                    this.setState({\n                        solutions: body.data,\n                        loading: false,\n                    });\n                } else {\n                    this.setState({\n                        error: body,\n                        loading: false,\n                    });\n                }\n            });\n    }\n\n    onUseWorkflowClick(id, name) {\n        const configWindow = openConfigWindow();\n\n        createSolutionInstance(id, name).then(({body}) => {\n            // After we generate the popup URL, set it to the previously opened\n            // window:\n            configWindow.location = body.data.popupUrl;\n        });\n    }\n\n    buildList(solutions) {\n        const styles = {\n            controls: {marginLeft: \"20px\"},\n            button: {width: \"100%\"},\n            text: {fontWeight: \"bold\"},\n            grid: {\n                maxWidth: \"900px\",\n                margin: \"20px auto\",\n            },\n            header: {margin: \"20px\"},\n            list: {\n                margin: \"10px\",\n                maxWidth: \"1000px\",\n                backgroundColor: \"white\",\n            },\n        };\n\n        return (\n            <Grid item style={styles.grid}>\n                <Typography\n                    variant=\"headline\"\n                    style={styles.header}\n                >\n                    Discover solutions\n                </Typography>\n                <Paper>\n                    <List style={styles.list}>\n                        {\n                            solutions.map(({title, id}, index) =>\n                                <ListItem\n                                    divider={index !== solutions.length - 1}\n                                    key={index}\n                                >\n                                    <ListItemText\n                                        style={styles.text}\n                                        primary={title}\n                                        secondary={null}\n                                    />\n                                    <ListItemSecondaryAction\n                                        onClick={() => this.onUseWorkflowClick(id, title)}\n                                    >\n                                        <Button\n                                            style={styles.button}\n                                            variant=\"outlined\"\n                                            color=\"primary\"\n                                        >\n                                            Use\n                                        </Button>\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            )\n                        }\n                    </List>\n                </Paper>\n            </Grid>\n        );\n    }\n\n    render() {\n        return (\n            <View>\n                <Loading loading={this.state.loading}>\n                    {\n                        this.state.error ?\n                            <Error msg={this.state.error}/> :\n                            this.buildList(this.state.solutions)\n                    }\n                </Loading>\n            </View>\n        );\n    }\n\n}\n\nexport default SolutionsDiscover;\n","import { withTheme } from \"@material-ui/core/styles/index\";\nimport React from \"react\";\n\nexport class AuthWizard extends React.PureComponent {\n  state = {};\n\n  constructor(props) {\n    super(props);\n    this.iframe = React.createRef();\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"message\", this.handleIframeEvents);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"message\", this.handleIframeEvents);\n  }\n\n  handleIframeEvents = (e) => {\n    console.log(`${e.data.type} event received`);\n    // Here we should handle all event types\n    if (e.data.type === \"tray.authPopup.error\") {\n      alert(`Error: ${e.data.error}`);\n    }\n    if (e.data.type === \"tray.authpopup.close\") {\n      this.props.onClose();\n    }\n    if (e.data.type === \"tray.authpopup.finish\") {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const styles = {\n      container: {\n        flex: 1,\n        position: \"relative\",\n      },\n      iframe: {\n        width: \"100%\",\n        height: \"100%\",\n        minHeight: \"500px\",\n        border: \"1px solid #2196f3\",\n        borderRadius: \"4px\",\n        boxSizing: \"border-box\",\n      },\n    };\n\n    return (\n      <div style={styles.container}>\n        <iframe ref={this.iframe} style={styles.iframe} src={this.props.src} />\n      </div>\n    );\n  }\n}\n\nexport default withTheme()(AuthWizard);\n","import React from 'react';\nimport View from '../components/View';\nimport Error from '../components/Error';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withTheme } from \"@material-ui/core/styles/index\";\nimport Loading from '../components/Loading';\nimport { listAuths, getAuthEditUrl } from '../api/me';\nimport { openAuthWindow } from \"../lib/authWindow\";\nimport { getAuthCreateUrl } from \"../api/me\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Grid from \"@material-ui/core/Grid\";\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { AuthWizard } from '../components/AuthWizard';\n\nexport class Authentications extends React.PureComponent {\n\n    styles = {\n        controls: {marginLeft: \"20px\"},\n        button: {width: \"100%\"},\n        text: {fontWeight: \"bold\"},\n        grid: {\n            maxWidth: \"900px\",\n            margin: \"20px auto\",\n        },\n        header: {margin: \"20px\"},\n        headerOptions: { display: 'flex', margin: \"0 20px 20px 20px\" },\n        headerOption: { marginRight: \"20px\" },\n        list: {\n            margin: \"10px\",\n            maxWidth: \"1000px\",\n            backgroundColor: \"white\",\n        },\n        advancedInput: {\n            marginRight: \"20px\",\n            flex: 1,\n        }\n    };\n\n    state = {\n        loading: true,\n        error: false,\n        auths: [],\n        params: '',\n        shouldOpenInFrame: false,\n        iframeURL: undefined\n    }\n\n    componentDidMount() {\n        this.loadAuths();\n    }\n\n    loadAuths = () => {\n        this.setState({\n            loading: true\n        }, () => {\n            listAuths()\n                .then(({ok, body}) => {\n                    if (ok) {\n                        this.setState({\n                            auths: body.data || [],\n                            loading: false,\n                        });\n                    } else {\n                        this.setState({\n                            error: body,\n                            loading: false,\n                        });\n                    }\n                });\n        });\n    }\n\n    openAuthWizard = (url) => {\n        if (this.state.shouldOpenInFrame) {\n          this.setState({ iframeURL: url });\n        } else {\n          openAuthWindow(url);\n        }\n    }\n\n    closeIframe = () => {\n        this.setState({ iframeURL: undefined });\n        this.loadAuths();\n    }\n\n    onCreateAuth = () => {\n        getAuthCreateUrl()\n            .then(({body}) => {\n                this.openAuthWizard(`${body.data.popupUrl}&${this.state.params}`);\n            })\n    };\n\n    buildList() {\n        return (\n            <Paper>\n                <List style={this.styles.list}>\n                    <Loading loading={this.state.loading}>\n                        {\n                            this.state.auths.map(({id, name}, index) =>\n                                <ListItem\n                                    divider={index !== this.state.auths.length - 1}\n                                    key={index}\n                                >\n                                    <ListItemText\n                                        style={this.styles.text}\n                                        primary={name}\n                                        secondary={null}\n                                    />\n                                    <ListItemSecondaryAction onClick={this.showAuthWindow(id)}>\n                                        <Button\n                                            style={this.styles.button}\n                                            variant=\"outlined\"\n                                            color=\"primary\"\n                                        >\n                                            Edit\n                                        </Button>\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            )\n                        }\n                    </Loading>\n                </List>\n            </Paper>\n        );\n    }\n\n    showAuthWindow = (id) => () => {\n        getAuthEditUrl(id)\n            .then(({body}) => {\n                this.openAuthWizard(`${body.data.popupUrl}&${this.state.params}`);\n            })\n    };\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    render() {\n        return (\n            <View>\n                <Grid item style={this.styles.grid}>\n                    <Grid\n                        container\n                        direction=\"column\"\n                    >\n                        <Typography\n                            variant=\"headline\"\n                            align=\"left\"\n                            style={this.styles.header}\n                        >\n                            Authentications\n                        </Typography>\n                        <div style={this.styles.headerOptions}>\n                            <Button\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                disabled={this.state.loading}\n                                onClick={this.onCreateAuth}\n                                style={this.styles.headerOption}\n                            >\n                                New\n                            </Button>\n                            <Button\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                disabled={this.state.loading}\n                                onClick={this.loadAuths}\n                                style={this.styles.headerOption}\n                            >\n                                Refresh\n                                <RefreshIcon />\n                            </Button>\n                            <TextField\n                                id=\"params\"\n                                label=\"Advanced Url Params\"\n                                value={this.state.params}\n                                onChange={this.handleChange('params')}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                style={this.styles.advancedInput}\n                            />\n                            <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    color=\"primary\"\n                                    value={this.state.shouldOpenInFrame}\n                                    onChange={({ target: { checked } }) => {\n                                      this.setState({ shouldOpenInFrame: checked });\n                                    }}\n                                  />\n                                }\n                                label=\"Open in iframe\"\n                            />\n                        </div>\n                    </Grid>\n                    {this.state.error ? (\n                          <Error msg={this.state.error} />\n                     ) : (\n                         <>\n                           {this.state.iframeURL && (\n                             <AuthWizard\n                               src={this.state.iframeURL}\n                               onClose={this.closeIframe}\n                             />\n                           )}\n                           {this.buildList()}\n                         </>\n                     )}\n                </Grid>\n            </View>\n        );\n    }\n\n}\n\nexport default withTheme()(Authentications);\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport { PrivateRoute, RedirectMain } from './components/auth/Auth';\n\nimport Demo from './views/Demo';\nimport Account from './views/Account';\nimport SolutionsMine from './views/SolutionsMine';\nimport SolutionsDiscover from './views/SolutionsDiscover';\nimport Authentications from './views/Authentications';\n\nconst App = () => (\n  <Router>\n    <div className=\"app-container\">\n      <Switch>\n        <RedirectMain exact from=\"/\" />\n      </Switch>\n      <Route path=\"/demo\" component={Demo} />\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/register\" component={Register} />\n      <PrivateRoute path=\"/account\" component={Account} />\n      <PrivateRoute path=\"/solutions/discover\" component={SolutionsDiscover} />\n      <PrivateRoute path=\"/solutions/mine\" component={SolutionsMine} />\n      <PrivateRoute path=\"/authentications\" component={Authentications} />\n    </div>\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './Router';\n// import registerServiceWorker from './registerServiceWorker';\nimport blue from '@material-ui/core/colors/blue';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'light',\n    primary: blue,\n  },\n});\n\nReactDOM.render(\n  <div className=\"index-wrapper\">\n    <BrowserRouter>\n      <MuiThemeProvider theme={theme}>\n        <App />\n      </MuiThemeProvider>\n    </BrowserRouter>\n  </div>,\n  document.getElementById('root')\n);\n\n// registerServiceWorker();\n"],"sourceRoot":""}